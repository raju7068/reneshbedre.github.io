I"Üv<p>
<!--

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css">

<style>
    .share-box a {
  display: inline-block;
  -webkit-box-shadow: 0 0 1px #777;
  box-shadow: 0 0 1px #777;
  padding: 5px 12px;
  margin-right: 5px;
  margin-bottom: 5px;
  text-decoration: none; }
  .share-box a:hover {
    text-decoration: none;
    -webkit-transition: background-color 200ms linear;
    -ms-transition: background-color 200ms linear;
    transition: background-color 200ms linear; }

.f {
  color: #3b5998; }
  .f:hover {
    color: #fff;
    background-color: #3b5998; }

.t {
  color: #4099FF; }
  .t:hover {
    color: #fff;
    background-color: #4099FF; }

.g {
  color: #d34836; }
  .g:hover {
    color: #fff;
    background-color: #d34836; }

.r {
  color: #ff5700; }
  .r:hover {
    color: #fff;
    background-color: #ff5700; }

.l {
  color: #0077b5; }
  .l:hover {
    color: #fff;
    background-color: #0077b5; }

.e {
  color: #444444; }
  .e:hover {
    color: #fff;
    background-color: #444444; }
</style>

<div class="share-box">
<a class="f" href="https://www.facebook.com/sharer/sharer.php?u=http://localhost:4000/blog/pandas.html" onclick="window.open(this.href, 'mywin',
'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;" ><i class="fab fa-facebook-f"></i></a>

<a class="t" href="https://twitter.com/intent/tweet?text=&url=http://localhost:4000/blog/pandas.html" onclick="window.open(this.href, 'mywin',
'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;"><i class="fab fa-twitter"></i></a>

  <a class="g" href="https://plus.google.com/share?url=http://localhost:4000/blog/pandas.html" onclick="window.open(this.href, 'mywin',
'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;" ><i class="fab fa-google-plus-square"></i></a>


<a class="r" href="http://www.reddit.com/submit?url=http://localhost:4000/blog/pandas.html" onclick="window.open(this.href, 'mywin',
'left=20,top=20,width=900,height=500,toolbar=1,resizable=0'); return false;" ><i class="fab fa-reddit"></i></a>

<a class="l" href="https://www.linkedin.com/shareArticle?mini=true&url=http://localhost:4000/blog/pandas.html" onclick="window.open(this.href, 'mywin',
'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;" ><i class="fab fa-linkedin-in"></i></a>

<a class="e" href="mailto:?subject=&amp;body=Check out this site http://localhost:4000/blog/pandas.html"><i class="fas fa-envelope-square"></i></a>
-->

  <!--
    <a href="https://twitter.com/renbedre?ref_src=twsrc%5Etfw" class="twitter-follow-button" data-show-count="false">Follow @renbedre</a><script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
-->

<!--
</div>

-->

</p>

<h2 id="what-is-pandas"><span style="color:#33a8ff">What is pandas?</span></h2>

<p>Pandas is python data analysis library which provides integrated and function rich
utilities for data handling, wrangling, and analysis of the datasets.</p>

<h2 id="how-to-install-pandas"><span style="color:#33a8ff">How to install pandas?</span></h2>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># using Miniconda</span>
<span class="c"># to install specific version provide pandas=version number (e.g. pandas=1.0)</span>
conda <span class="nb">install </span>pandas

<span class="c"># using pip</span>
pip <span class="nb">install </span>pandas
</code></pre></div></div>
<h3 id="check-pandas-version">Check pandas version</h3>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># you can use interactive python interpreter, jupyter notebook or python code
# I am using interactive python interpreter (Python 3.7)
</span><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">pd</span><span class="p">.</span><span class="n">__version__</span>
<span class="s">'0.25.3'</span>
</code></pre></div></div>

<h2 id="create-dataframe-and-series-using-pandas"><span style="color:#33a8ff">Create dataframe and series using pandas</span></h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># you can use interactive python interpreter, jupyter notebook or python code
# I am using interactive python interpreter (Python 3.7)
</span>
<span class="c1"># create pandas dataframe (two-dimensional)
</span><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="c1"># dataframe from dict
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df1</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">({</span><span class="s">'col1'</span><span class="p">:[</span><span class="s">'A'</span><span class="p">,</span> <span class="s">'B'</span><span class="p">,</span> <span class="s">'C'</span><span class="p">,</span> <span class="s">'D'</span><span class="p">,</span> <span class="s">'E'</span><span class="p">],</span> <span class="s">'col2'</span><span class="p">:[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">],</span> <span class="s">'col3'</span><span class="p">:[</span><span class="mf">0.1</span><span class="p">,</span><span class="mf">0.2</span><span class="p">,</span><span class="mf">0.3</span><span class="p">,</span><span class="mf">0.4</span><span class="p">,</span><span class="mf">0.5</span><span class="p">]})</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">df1</span>
<span class="n">col1</span> 	<span class="n">col2</span> 	<span class="n">col3</span>
<span class="mi">0</span> 	<span class="n">A</span> 	<span class="mi">1</span> 	<span class="mf">0.1</span>
<span class="mi">1</span> 	<span class="n">B</span> 	<span class="mi">2</span> 	<span class="mf">0.2</span>
<span class="mi">2</span> 	<span class="n">C</span> 	<span class="mi">3</span> 	<span class="mf">0.3</span>
<span class="mi">3</span> 	<span class="n">D</span> 	<span class="mi">4</span> 	<span class="mf">0.4</span>
<span class="mi">4</span> 	<span class="n">E</span> 	<span class="mi">5</span> 	<span class="mf">0.5</span>

<span class="c1"># Create a dataframe with some random numbers
</span><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">df2</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">100</span><span class="p">,</span><span class="n">size</span><span class="o">=</span><span class="p">(</span><span class="mi">1000</span><span class="p">,</span> <span class="mi">10</span><span class="p">)),</span> <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">'col%i'</span> <span class="o">%</span> <span class="n">i</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">10</span><span class="p">)])</span>
<span class="c1"># print first 5 rows
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df2</span><span class="p">.</span><span class="n">head</span><span class="p">()</span>
   <span class="n">col0</span>  <span class="n">col1</span>  <span class="n">col2</span>  <span class="n">col3</span>  <span class="n">col4</span>  <span class="n">col5</span>  <span class="n">col6</span>  <span class="n">col7</span>  <span class="n">col8</span>  <span class="n">col9</span>
<span class="mi">0</span>     <span class="mi">2</span>    <span class="mi">72</span>     <span class="mi">7</span>    <span class="mi">23</span>    <span class="mi">82</span>    <span class="mi">76</span>    <span class="mi">29</span>    <span class="mi">86</span>    <span class="mi">55</span>    <span class="mi">41</span>
<span class="mi">1</span>    <span class="mi">37</span>    <span class="mi">23</span>    <span class="mi">73</span>    <span class="mi">62</span>    <span class="mi">53</span>    <span class="mi">70</span>    <span class="mi">50</span>    <span class="mi">30</span>     <span class="mi">5</span>    <span class="mi">11</span>
<span class="mi">2</span>    <span class="mi">38</span>    <span class="mi">13</span>    <span class="mi">64</span>    <span class="mi">54</span>    <span class="mi">19</span>    <span class="mi">35</span>    <span class="mi">93</span>    <span class="mi">67</span>    <span class="mi">25</span>    <span class="mi">13</span>
<span class="mi">3</span>    <span class="mi">55</span>    <span class="mi">58</span>    <span class="mi">82</span>    <span class="mi">92</span>    <span class="mi">35</span>    <span class="mi">24</span>     <span class="mi">0</span>    <span class="mi">57</span>     <span class="mi">7</span>     <span class="mi">6</span>
<span class="mi">4</span>    <span class="mi">75</span>    <span class="mi">65</span>    <span class="mi">82</span>    <span class="mi">68</span>    <span class="mi">16</span>    <span class="mi">49</span>    <span class="mi">50</span>    <span class="mi">86</span>    <span class="mi">52</span>    <span class="mi">65</span>

<span class="c1"># create pandas series (one-dimensional)
</span><span class="n">df3</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">Series</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">100</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">10</span><span class="p">))</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">df3</span><span class="p">.</span><span class="n">head</span><span class="p">()</span>
<span class="mi">0</span>     <span class="mi">5</span>
<span class="mi">1</span>    <span class="mi">37</span>
<span class="mi">2</span>    <span class="mi">59</span>
<span class="mi">3</span>    <span class="mi">53</span>
<span class="mi">4</span>    <span class="mi">37</span>
<span class="n">dtype</span><span class="p">:</span> <span class="n">int32</span>
</code></pre></div></div>

<h2 id="import-data-from-file"><span style="color:#33a8ff">Import data from file</span></h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># read csv file
</span><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">df4</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">"https://reneshbedre.github.io/assets/posts/volcano/testvolcano.csv"</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">df4</span><span class="p">.</span><span class="n">head</span><span class="p">()</span>
          <span class="n">GeneNames</span>  <span class="n">value1</span>  <span class="n">value2</span>    <span class="n">log2FC</span>       <span class="n">p</span><span class="o">-</span><span class="n">value</span>
<span class="mi">0</span>  <span class="n">LOC_Os09g01000</span><span class="p">.</span><span class="mi">1</span>    <span class="mi">8862</span>   <span class="mi">32767</span> <span class="o">-</span><span class="mf">1.886539</span>  <span class="mf">1.250000e-55</span>
<span class="mi">1</span>  <span class="n">LOC_Os12g42876</span><span class="p">.</span><span class="mi">1</span>    <span class="mi">1099</span>     <span class="mi">117</span>  <span class="mf">3.231611</span>  <span class="mf">1.050000e-55</span>
<span class="mi">2</span>  <span class="n">LOC_Os12g42884</span><span class="p">.</span><span class="mi">2</span>     <span class="mi">797</span>      <span class="mi">88</span>  <span class="mf">3.179004</span>  <span class="mf">2.590000e-54</span>
<span class="mi">3</span>  <span class="n">LOC_Os03g16920</span><span class="p">.</span><span class="mi">1</span>     <span class="mi">274</span>       <span class="mi">7</span>  <span class="mf">5.290677</span>  <span class="mf">4.690000e-54</span>
<span class="mi">4</span>  <span class="n">LOC_Os05g47540</span><span class="p">.</span><span class="mi">4</span>     <span class="mi">308</span>      <span class="mi">18</span>  <span class="mf">4.096862</span>  <span class="mf">2.190000e-54</span>

<span class="c1"># read tab file
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df5</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">"https://reneshbedre.github.io/assets/posts/anova/onewayanova.txt"</span><span class="p">,</span> <span class="n">sep</span><span class="o">=</span><span class="s">"</span><span class="se">\t</span><span class="s">"</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">df5</span><span class="p">.</span><span class="n">head</span><span class="p">()</span>
    <span class="n">A</span>   <span class="n">B</span>   <span class="n">C</span>   <span class="n">D</span>
<span class="mi">0</span>  <span class="mi">25</span>  <span class="mi">45</span>  <span class="mi">30</span>  <span class="mi">54</span>
<span class="mi">1</span>  <span class="mi">30</span>  <span class="mi">55</span>  <span class="mi">29</span>  <span class="mi">60</span>
<span class="mi">2</span>  <span class="mi">28</span>  <span class="mi">29</span>  <span class="mi">33</span>  <span class="mi">51</span>
<span class="mi">3</span>  <span class="mi">36</span>  <span class="mi">56</span>  <span class="mi">37</span>  <span class="mi">62</span>
<span class="mi">4</span>  <span class="mi">29</span>  <span class="mi">40</span>  <span class="mi">27</span>  <span class="mi">73</span>

<span class="c1"># make first column of table as index
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df6</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">"https://reneshbedre.github.io/assets/posts/volcano/testvolcano.csv"</span><span class="p">,</span> <span class="n">index_col</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">df6</span><span class="p">.</span><span class="n">head</span><span class="p">()</span>
                  <span class="n">value1</span>  <span class="n">value2</span>    <span class="n">log2FC</span>       <span class="n">p</span><span class="o">-</span><span class="n">value</span>
<span class="n">GeneNames</span>
<span class="n">LOC_Os09g01000</span><span class="p">.</span><span class="mi">1</span>    <span class="mi">8862</span>   <span class="mi">32767</span> <span class="o">-</span><span class="mf">1.886539</span>  <span class="mf">1.250000e-55</span>
<span class="n">LOC_Os12g42876</span><span class="p">.</span><span class="mi">1</span>    <span class="mi">1099</span>     <span class="mi">117</span>  <span class="mf">3.231611</span>  <span class="mf">1.050000e-55</span>
<span class="n">LOC_Os12g42884</span><span class="p">.</span><span class="mi">2</span>     <span class="mi">797</span>      <span class="mi">88</span>  <span class="mf">3.179004</span>  <span class="mf">2.590000e-54</span>
<span class="n">LOC_Os03g16920</span><span class="p">.</span><span class="mi">1</span>     <span class="mi">274</span>       <span class="mi">7</span>  <span class="mf">5.290677</span>  <span class="mf">4.690000e-54</span>
<span class="n">LOC_Os05g47540</span><span class="p">.</span><span class="mi">4</span>     <span class="mi">308</span>      <span class="mi">18</span>  <span class="mf">4.096862</span>  <span class="mf">2.190000e-54</span>

<span class="c1"># import specific columns only
# you can also replace numbers with column names in usecols argument
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df7</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">"https://reneshbedre.github.io/assets/posts/volcano/testvolcano.csv"</span><span class="p">,</span> <span class="n">usecols</span><span class="o">=</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">])</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">df7</span><span class="p">.</span><span class="n">head</span><span class="p">()</span>
          <span class="n">GeneNames</span>    <span class="n">log2FC</span>       <span class="n">p</span><span class="o">-</span><span class="n">value</span>
<span class="mi">0</span>  <span class="n">LOC_Os09g01000</span><span class="p">.</span><span class="mi">1</span> <span class="o">-</span><span class="mf">1.886539</span>  <span class="mf">1.250000e-55</span>
<span class="mi">1</span>  <span class="n">LOC_Os12g42876</span><span class="p">.</span><span class="mi">1</span>  <span class="mf">3.231611</span>  <span class="mf">1.050000e-55</span>
<span class="mi">2</span>  <span class="n">LOC_Os12g42884</span><span class="p">.</span><span class="mi">2</span>  <span class="mf">3.179004</span>  <span class="mf">2.590000e-54</span>
<span class="mi">3</span>  <span class="n">LOC_Os03g16920</span><span class="p">.</span><span class="mi">1</span>  <span class="mf">5.290677</span>  <span class="mf">4.690000e-54</span>
<span class="mi">4</span>  <span class="n">LOC_Os05g47540</span><span class="p">.</span><span class="mi">4</span>  <span class="mf">4.096862</span>  <span class="mf">2.190000e-54</span>

<span class="c1"># skip first n rows
# you can also skip rows from bottom using skipfooter argument
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df8</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">"https://reneshbedre.github.io/assets/posts/volcano/testvolcano.csv"</span><span class="p">,</span> <span class="n">index_col</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">skiprows</span><span class="o">=</span><span class="mi">5</span><span class="p">,</span> <span class="n">header</span><span class="o">=</span><span class="bp">None</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">df8</span><span class="p">.</span><span class="n">head</span><span class="p">()</span>
                    <span class="mi">1</span>     <span class="mi">2</span>         <span class="mi">3</span>             <span class="mi">4</span>
<span class="mi">0</span>
<span class="n">LOC_Os05g47540</span><span class="p">.</span><span class="mi">4</span>  <span class="mi">308</span>    <span class="mi">18</span>  <span class="mf">4.096862</span>  <span class="mf">2.190000e-54</span>
<span class="n">LOC_Os09g00999</span><span class="p">.</span><span class="mi">1</span>  <span class="mi">339</span>  <span class="mi">1213</span> <span class="o">-</span><span class="mf">1.839222</span>  <span class="mf">1.950000e-54</span>
<span class="n">LOC_Os01g62900</span><span class="p">.</span><span class="mi">1</span>  <span class="mi">193</span>     <span class="mi">4</span>  <span class="mf">5.592457</span>  <span class="mf">1.560000e-54</span>
<span class="n">LOC_Os09g27030</span><span class="p">.</span><span class="mi">2</span>  <span class="mi">504</span>   <span class="mi">162</span>  <span class="mf">1.637430</span>  <span class="mf">1.360000e-54</span>
<span class="n">LOC_Os01g51410</span><span class="p">.</span><span class="mi">2</span>  <span class="mi">225</span>    <span class="mi">22</span>  <span class="mf">3.354350</span>  <span class="mf">6.760000e-54</span>

<span class="c1"># read only first n rows
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df9</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">"https://reneshbedre.github.io/assets/posts/volcano/testvolcano.csv"</span><span class="p">,</span> <span class="n">index_col</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">nrows</span><span class="o">=</span><span class="mi">100</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">df9</span>
                  <span class="n">value1</span>  <span class="n">value2</span>    <span class="n">log2FC</span>       <span class="n">p</span><span class="o">-</span><span class="n">value</span>
<span class="n">GeneNames</span>
<span class="n">LOC_Os09g01000</span><span class="p">.</span><span class="mi">1</span>    <span class="mi">8862</span>   <span class="mi">32767</span> <span class="o">-</span><span class="mf">1.886539</span>  <span class="mf">1.250000e-55</span>
<span class="n">LOC_Os12g42876</span><span class="p">.</span><span class="mi">1</span>    <span class="mi">1099</span>     <span class="mi">117</span>  <span class="mf">3.231611</span>  <span class="mf">1.050000e-55</span>
<span class="n">LOC_Os12g42884</span><span class="p">.</span><span class="mi">2</span>     <span class="mi">797</span>      <span class="mi">88</span>  <span class="mf">3.179004</span>  <span class="mf">2.590000e-54</span>
<span class="n">LOC_Os03g16920</span><span class="p">.</span><span class="mi">1</span>     <span class="mi">274</span>       <span class="mi">7</span>  <span class="mf">5.290677</span>  <span class="mf">4.690000e-54</span>
<span class="n">LOC_Os05g47540</span><span class="p">.</span><span class="mi">4</span>     <span class="mi">308</span>      <span class="mi">18</span>  <span class="mf">4.096862</span>  <span class="mf">2.190000e-54</span>
<span class="p">[</span><span class="mi">100</span> <span class="n">rows</span> <span class="n">x</span> <span class="mi">4</span> <span class="n">columns</span><span class="p">]</span>

<span class="c1"># skip comment lines
# below command will skip any lines starting with #
# only one character allowed for comments (# is okay, but ## will not work)
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">"file.csv"</span><span class="p">,</span> <span class="n">comment</span><span class="o">=</span><span class="s">'#'</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="check-data-type-dtype"><span style="color:#33a8ff">Check data type (dtype)</span></h2>

<p>Check a data type of each column in the dataframe</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">df1</span><span class="p">.</span><span class="n">dtypes</span>
<span class="n">Col1</span>     <span class="nb">object</span>
<span class="n">col2</span>      <span class="n">int64</span>
<span class="n">col3</span>    <span class="n">float64</span>
<span class="n">dtype</span><span class="p">:</span> <span class="nb">object</span>
</code></pre></div></div>

<h2 id="check-dataframe-dimensions-size-shape-and-ndim"><span style="color:#33a8ff">Check dataframe dimensions (size, shape and ndim)</span></h2>

<p>Check the total number of elements, columns, and rows in a dataframe</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># get total number of elements in a dataframe 
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df1</span><span class="p">.</span><span class="n">size</span>
<span class="mi">15</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">df2</span><span class="p">.</span><span class="n">size</span>
<span class="mi">10000</span>

<span class="c1"># get number of rows and columns
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df1</span><span class="p">.</span><span class="n">shape</span>
<span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>  <span class="c1"># (rows, columns)
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df2</span><span class="p">.</span><span class="n">shape</span>
<span class="p">(</span><span class="mi">1000</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span> <span class="c1"># (rows, columns)
</span>
<span class="c1"># get the array dimensions (number of axes)
# returns 1 for pandas series (one-dimensional) and 2 for dataframes (two-dimensional) 
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df1</span><span class="p">.</span><span class="n">ndim</span>
<span class="mi">2</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">df2</span><span class="p">.</span><span class="n">ndim</span>
<span class="mi">2</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">df3</span><span class="p">.</span><span class="n">ndim</span>
<span class="mi">1</span>
</code></pre></div></div>

<h2 id="extracting-columns-and-rows-from-dataframe"><span style="color:#33a8ff">Extracting columns and rows from dataframe</span></h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># get column data based on column name
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df1</span><span class="p">[</span><span class="s">'col2'</span><span class="p">]</span>
<span class="mi">0</span>    <span class="mi">1</span>
<span class="mi">1</span>    <span class="mi">2</span>
<span class="mi">2</span>    <span class="mi">3</span>
<span class="mi">3</span>    <span class="mi">4</span>
<span class="mi">4</span>    <span class="mi">5</span>
<span class="n">Name</span><span class="p">:</span> <span class="n">col2</span><span class="p">,</span> <span class="n">dtype</span><span class="p">:</span> <span class="n">int64</span>

<span class="c1"># get row data based on row index
# return row output will be series 
# extract row with index 0 
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df1</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> 
<span class="n">Col1</span>      <span class="n">A</span>
<span class="n">col2</span>      <span class="mi">1</span>
<span class="n">col3</span>    <span class="mf">0.1</span>
<span class="n">Name</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="n">dtype</span><span class="p">:</span> <span class="nb">object</span>

<span class="c1"># assign first column (col1) as index
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df1_1</span> <span class="o">=</span> <span class="n">df1</span><span class="p">.</span><span class="n">set_index</span><span class="p">(</span><span class="s">'col1'</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">df1_1</span>
      <span class="n">col2</span>  <span class="n">col3</span>
<span class="n">col1</span>
<span class="n">A</span>        <span class="mi">1</span>   <span class="mf">0.1</span>
<span class="n">B</span>        <span class="mi">2</span>   <span class="mf">0.2</span>
<span class="n">C</span>        <span class="mi">3</span>   <span class="mf">0.3</span>
<span class="n">D</span>        <span class="mi">4</span>   <span class="mf">0.4</span>
<span class="n">E</span>        <span class="mi">5</span>   <span class="mf">0.5</span>

<span class="c1"># get rows data based on row index (col1 as index)
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df1_1</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="s">'E'</span><span class="p">]</span>
<span class="n">col2</span>    <span class="mf">5.0</span>
<span class="n">col3</span>    <span class="mf">0.5</span>
<span class="n">Name</span><span class="p">:</span> <span class="n">E</span><span class="p">,</span> <span class="n">dtype</span><span class="p">:</span> <span class="n">float64</span>
</code></pre></div></div>

<h2 id="extracting-subsets-of-dataframes"><span style="color:#33a8ff">Extracting subsets of dataframes</span></h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># get subset of dataframe [row, column]
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df1_1</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="s">'A'</span><span class="p">:</span><span class="s">'C'</span><span class="p">,</span> <span class="s">'col2'</span><span class="p">:</span><span class="s">'col3'</span><span class="p">]</span>
      <span class="n">col2</span>  <span class="n">col3</span>
<span class="n">col1</span>
<span class="n">A</span>        <span class="mi">1</span>   <span class="mf">0.1</span>
<span class="n">B</span>        <span class="mi">2</span>   <span class="mf">0.2</span>
<span class="n">C</span>        <span class="mi">3</span>   <span class="mf">0.3</span>

<span class="c1"># based on default numeric index
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df2</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="mi">5</span><span class="p">:</span><span class="mi">9</span><span class="p">,</span> <span class="s">'col2'</span><span class="p">:</span><span class="s">'col6'</span><span class="p">]</span>
   <span class="n">col2</span>  <span class="n">col3</span>  <span class="n">col4</span>  <span class="n">col5</span>  <span class="n">col6</span>
<span class="mi">5</span>    <span class="mi">49</span>     <span class="mi">5</span>    <span class="mi">61</span>    <span class="mi">87</span>    <span class="mi">23</span>
<span class="mi">6</span>    <span class="mi">20</span>    <span class="mi">57</span>    <span class="mi">40</span>    <span class="mi">21</span>    <span class="mi">17</span>
<span class="mi">7</span>    <span class="mi">30</span>    <span class="mi">30</span>    <span class="mi">38</span>    <span class="mi">94</span>    <span class="mi">50</span>
<span class="mi">8</span>    <span class="mi">98</span>    <span class="mi">17</span>    <span class="mi">31</span>    <span class="mi">67</span>    <span class="mi">59</span>
<span class="mi">9</span>    <span class="mi">39</span>     <span class="mi">9</span>     <span class="mi">4</span>    <span class="mi">17</span>     <span class="mi">8</span>

<span class="c1"># get specific columns with all rows
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df2</span><span class="p">[[</span><span class="s">'col1'</span><span class="p">,</span> <span class="s">'col5'</span><span class="p">,</span> <span class="s">'col8'</span><span class="p">]]</span>
     <span class="n">col1</span>  <span class="n">col5</span>  <span class="n">col8</span>
<span class="mi">0</span>      <span class="mi">21</span>     <span class="mi">2</span>    <span class="mi">14</span>
<span class="mi">1</span>      <span class="mi">93</span>    <span class="mi">29</span>    <span class="mi">93</span>
<span class="mi">2</span>      <span class="mi">23</span>    <span class="mi">24</span>    <span class="mi">32</span>
<span class="mi">3</span>      <span class="mi">26</span>    <span class="mi">72</span>    <span class="mi">55</span>
<span class="mi">4</span>      <span class="mi">17</span>    <span class="mi">96</span>    <span class="mi">40</span>

<span class="c1"># get specific rows with all columns
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df2</span><span class="p">[</span><span class="mi">2</span><span class="p">:</span><span class="mi">6</span><span class="p">]</span>
   <span class="n">col0</span>  <span class="n">col1</span>  <span class="n">col2</span>  <span class="n">col3</span>  <span class="n">col4</span>  <span class="n">col5</span>  <span class="n">col6</span>  <span class="n">col7</span>  <span class="n">col8</span>  <span class="n">col9</span>
<span class="mi">2</span>     <span class="mi">4</span>    <span class="mi">23</span>    <span class="mi">64</span>    <span class="mi">49</span>    <span class="mi">71</span>    <span class="mi">24</span>    <span class="mi">97</span>    <span class="mi">92</span>    <span class="mi">32</span>    <span class="mi">39</span>
<span class="mi">3</span>    <span class="mi">73</span>    <span class="mi">26</span>    <span class="mi">33</span>    <span class="mi">99</span>    <span class="mi">62</span>    <span class="mi">72</span>    <span class="mi">73</span>     <span class="mi">3</span>    <span class="mi">55</span>    <span class="mi">82</span>
<span class="mi">4</span>    <span class="mi">72</span>    <span class="mi">17</span>    <span class="mi">73</span>    <span class="mi">71</span>    <span class="mi">42</span>    <span class="mi">96</span>    <span class="mi">56</span>    <span class="mi">29</span>    <span class="mi">40</span>    <span class="mi">96</span>
<span class="mi">5</span>    <span class="mi">16</span>    <span class="mi">10</span>    <span class="mi">49</span>     <span class="mi">5</span>    <span class="mi">61</span>    <span class="mi">87</span>    <span class="mi">23</span>     <span class="mi">7</span>    <span class="mi">36</span>     <span class="mi">1</span>

<span class="c1"># get specific columns with specific rows
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df2</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="mi">2</span><span class="p">:</span><span class="mi">4</span><span class="p">,</span> <span class="p">[</span><span class="s">'col1'</span><span class="p">,</span> <span class="s">'col5'</span><span class="p">,</span> <span class="s">'col8'</span><span class="p">]]</span>


</code></pre></div></div>

<h2 id="statistics-of-dataframes"><span style="color:#33a8ff">Statistics of dataframes</span></h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># check above to create dataframe objects (df1, df2 and df1_1)
# get descriptive statistics (count, mean, std dev, min, max, and quartiles)
# it excludes all NaN or missing values
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df1</span><span class="p">.</span><span class="n">describe</span><span class="p">()</span>
           <span class="n">col2</span>      <span class="n">col3</span>
<span class="n">count</span>  <span class="mf">5.000000</span>  <span class="mf">5.000000</span>
<span class="n">mean</span>   <span class="mf">3.000000</span>  <span class="mf">0.300000</span>
<span class="n">std</span>    <span class="mf">1.581139</span>  <span class="mf">0.158114</span>
<span class="nb">min</span>    <span class="mf">1.000000</span>  <span class="mf">0.100000</span>
<span class="mi">25</span><span class="o">%</span>    <span class="mf">2.000000</span>  <span class="mf">0.200000</span>
<span class="mi">50</span><span class="o">%</span>    <span class="mf">3.000000</span>  <span class="mf">0.300000</span>
<span class="mi">75</span><span class="o">%</span>    <span class="mf">4.000000</span>  <span class="mf">0.400000</span>
<span class="nb">max</span>    <span class="mf">5.000000</span>  <span class="mf">0.500000</span>

<span class="c1"># get only certain element like mean ,count
# get mean
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df1</span><span class="p">.</span><span class="n">describe</span><span class="p">().</span><span class="n">loc</span><span class="p">[</span><span class="s">'mean'</span><span class="p">]</span>
<span class="n">col2</span>    <span class="mf">3.0</span>
<span class="n">col3</span>    <span class="mf">0.3</span>
<span class="n">Name</span><span class="p">:</span> <span class="n">mean</span><span class="p">,</span> <span class="n">dtype</span><span class="p">:</span> <span class="n">float64</span>

<span class="c1"># get mean and std dev
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df1</span><span class="p">.</span><span class="n">describe</span><span class="p">().</span><span class="n">loc</span><span class="p">[[</span><span class="s">'mean'</span><span class="p">,</span> <span class="s">'std'</span><span class="p">]]</span>
          <span class="n">col2</span>      <span class="n">col3</span>
<span class="n">mean</span>  <span class="mf">3.000000</span>  <span class="mf">0.300000</span>
<span class="n">std</span>   <span class="mf">1.581139</span>  <span class="mf">0.158114</span>

<span class="c1"># get standard error of mean (sem)
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df1</span><span class="p">.</span><span class="n">sem</span><span class="p">()</span>
<span class="n">col2</span>    <span class="mf">0.707107</span>
<span class="n">col3</span>    <span class="mf">0.070711</span>
<span class="n">dtype</span><span class="p">:</span> <span class="n">float64</span>

<span class="c1"># for specific columns only
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df2</span><span class="p">[</span><span class="s">'col4'</span><span class="p">].</span><span class="n">describe</span><span class="p">()</span>
<span class="n">count</span>    <span class="mf">1000.000000</span>
<span class="n">mean</span>       <span class="mf">48.917000</span>
<span class="n">std</span>        <span class="mf">28.679865</span>
<span class="nb">min</span>         <span class="mf">0.000000</span>
<span class="mi">25</span><span class="o">%</span>        <span class="mf">25.000000</span>
<span class="mi">50</span><span class="o">%</span>        <span class="mf">49.000000</span>
<span class="mi">75</span><span class="o">%</span>        <span class="mf">74.000000</span>
<span class="nb">max</span>        <span class="mf">99.000000</span>
<span class="n">Name</span><span class="p">:</span> <span class="n">col4</span><span class="p">,</span> <span class="n">dtype</span><span class="p">:</span> <span class="n">float64</span>

<span class="c1"># for only selected multiple columns
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df2</span><span class="p">.</span><span class="n">loc</span><span class="p">[:,</span><span class="s">'col1'</span><span class="p">:</span><span class="s">'col5'</span><span class="p">].</span><span class="n">describe</span><span class="p">()</span>
              <span class="n">col1</span>         <span class="n">col2</span>         <span class="n">col3</span>         <span class="n">col4</span>         <span class="n">col5</span>
<span class="n">count</span>  <span class="mf">1000.000000</span>  <span class="mf">1000.000000</span>  <span class="mf">1000.000000</span>  <span class="mf">1000.000000</span>  <span class="mf">1000.000000</span>
<span class="n">mean</span>     <span class="mf">49.334000</span>    <span class="mf">51.057000</span>    <span class="mf">48.676000</span>    <span class="mf">48.917000</span>    <span class="mf">48.486000</span>
<span class="n">std</span>      <span class="mf">28.311375</span>    <span class="mf">29.141293</span>    <span class="mf">28.252065</span>    <span class="mf">28.679865</span>    <span class="mf">29.070619</span>
<span class="nb">min</span>       <span class="mf">0.000000</span>     <span class="mf">0.000000</span>     <span class="mf">0.000000</span>     <span class="mf">0.000000</span>     <span class="mf">0.000000</span>
<span class="mi">25</span><span class="o">%</span>      <span class="mf">25.000000</span>    <span class="mf">26.000000</span>    <span class="mf">25.000000</span>    <span class="mf">25.000000</span>    <span class="mf">22.000000</span>
<span class="mi">50</span><span class="o">%</span>      <span class="mf">50.000000</span>    <span class="mf">52.000000</span>    <span class="mf">49.000000</span>    <span class="mf">49.000000</span>    <span class="mf">50.000000</span>
<span class="mi">75</span><span class="o">%</span>      <span class="mf">73.000000</span>    <span class="mf">77.000000</span>    <span class="mf">73.000000</span>    <span class="mf">74.000000</span>    <span class="mf">73.000000</span>
<span class="nb">max</span>      <span class="mf">99.000000</span>    <span class="mf">99.000000</span>    <span class="mf">99.000000</span>    <span class="mf">99.000000</span>    <span class="mf">99.000000</span>

<span class="c1"># to get descriptive statistics by row-wise you can transpose the columns
# or use apply function
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df1_1</span><span class="p">.</span><span class="nb">apply</span><span class="p">(</span><span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">.</span><span class="n">describe</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
      <span class="n">count</span>  <span class="n">mean</span>       <span class="n">std</span>  <span class="nb">min</span>    <span class="mi">25</span><span class="o">%</span>   <span class="mi">50</span><span class="o">%</span>    <span class="mi">75</span><span class="o">%</span>  <span class="nb">max</span>
<span class="n">col1</span>
<span class="n">A</span>       <span class="mf">2.0</span>  <span class="mf">0.55</span>  <span class="mf">0.636396</span>  <span class="mf">0.1</span>  <span class="mf">0.325</span>  <span class="mf">0.55</span>  <span class="mf">0.775</span>  <span class="mf">1.0</span>
<span class="n">B</span>       <span class="mf">2.0</span>  <span class="mf">1.10</span>  <span class="mf">1.272792</span>  <span class="mf">0.2</span>  <span class="mf">0.650</span>  <span class="mf">1.10</span>  <span class="mf">1.550</span>  <span class="mf">2.0</span>
<span class="n">C</span>       <span class="mf">2.0</span>  <span class="mf">1.65</span>  <span class="mf">1.909188</span>  <span class="mf">0.3</span>  <span class="mf">0.975</span>  <span class="mf">1.65</span>  <span class="mf">2.325</span>  <span class="mf">3.0</span>
<span class="n">D</span>       <span class="mf">2.0</span>  <span class="mf">2.20</span>  <span class="mf">2.545584</span>  <span class="mf">0.4</span>  <span class="mf">1.300</span>  <span class="mf">2.20</span>  <span class="mf">3.100</span>  <span class="mf">4.0</span>
<span class="n">E</span>       <span class="mf">2.0</span>  <span class="mf">2.75</span>  <span class="mf">3.181981</span>  <span class="mf">0.5</span>  <span class="mf">1.625</span>  <span class="mf">2.75</span>  <span class="mf">3.875</span>  <span class="mf">5.0</span>

<span class="c1"># to get descriptive statistics by row-wise but only for specific columns
</span><span class="o">&gt;&gt;</span> <span class="n">df2</span><span class="p">.</span><span class="n">loc</span><span class="p">[:,</span><span class="s">'col0'</span><span class="p">:</span><span class="s">'col4'</span><span class="p">].</span><span class="nb">apply</span><span class="p">(</span><span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">.</span><span class="n">describe</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
     <span class="n">count</span>  <span class="n">mean</span>        <span class="n">std</span>   <span class="nb">min</span>   <span class="mi">25</span><span class="o">%</span>   <span class="mi">50</span><span class="o">%</span>   <span class="mi">75</span><span class="o">%</span>   <span class="nb">max</span>
<span class="mi">0</span>      <span class="mf">5.0</span>  <span class="mf">43.8</span>  <span class="mf">37.325594</span>  <span class="mf">12.0</span>  <span class="mf">12.0</span>  <span class="mf">30.0</span>  <span class="mf">69.0</span>  <span class="mf">96.0</span>
<span class="mi">1</span>      <span class="mf">5.0</span>  <span class="mf">52.8</span>  <span class="mf">34.687173</span>   <span class="mf">1.0</span>  <span class="mf">43.0</span>  <span class="mf">55.0</span>  <span class="mf">71.0</span>  <span class="mf">94.0</span>
<span class="mi">2</span>      <span class="mf">5.0</span>  <span class="mf">61.6</span>  <span class="mf">36.287739</span>  <span class="mf">14.0</span>  <span class="mf">34.0</span>  <span class="mf">72.0</span>  <span class="mf">90.0</span>  <span class="mf">98.0</span>
<span class="mi">3</span>      <span class="mf">5.0</span>  <span class="mf">70.0</span>  <span class="mf">32.992423</span>  <span class="mf">21.0</span>  <span class="mf">52.0</span>  <span class="mf">83.0</span>  <span class="mf">96.0</span>  <span class="mf">98.0</span>
<span class="mi">4</span>      <span class="mf">5.0</span>  <span class="mf">43.4</span>  <span class="mf">34.681407</span>   <span class="mf">3.0</span>   <span class="mf">9.0</span>  <span class="mf">59.0</span>  <span class="mf">73.0</span>  <span class="mf">73.0</span>
<span class="p">..</span>
</code></pre></div></div>

<h2 id="addinsert-rows-and-columns-to-existing-dataframes"><span style="color:#33a8ff">Add/Insert rows and columns to existing dataframes</span></h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># check above to create dataframe objects (df1, df2 and df1_1)
# add extra row to existing df1 dataframe
</span><span class="o">&gt;&gt;&gt;</span><span class="n">df1_2</span> <span class="o">=</span> <span class="n">df1</span><span class="p">.</span><span class="n">append</span><span class="p">({</span><span class="s">'col1'</span><span class="p">:</span> <span class="s">'F'</span><span class="p">,</span> <span class="s">'col2'</span><span class="p">:</span> <span class="mi">6</span><span class="p">,</span> <span class="s">'col3'</span><span class="p">:</span> <span class="mf">0.6</span><span class="p">},</span> <span class="n">ignore_index</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="c1"># ignore_index option will ignore the current index and append to df1
# dataframe.This option is useful when appending two dataframe and to
# preserve the original index of each dataframes
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df1_2</span>
  <span class="n">col1</span>  <span class="n">col2</span>  <span class="n">col3</span>
<span class="mi">0</span>    <span class="n">A</span>     <span class="mi">1</span>   <span class="mf">0.1</span>
<span class="mi">1</span>    <span class="n">B</span>     <span class="mi">2</span>   <span class="mf">0.2</span>
<span class="mi">2</span>    <span class="n">C</span>     <span class="mi">3</span>   <span class="mf">0.3</span>
<span class="mi">3</span>    <span class="n">D</span>     <span class="mi">4</span>   <span class="mf">0.4</span>
<span class="mi">4</span>    <span class="n">E</span>     <span class="mi">5</span>   <span class="mf">0.5</span>
<span class="mi">5</span>    <span class="n">F</span>     <span class="mi">6</span>   <span class="mf">0.6</span>

<span class="c1"># adding a column to dataframe
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df1_2</span><span class="p">[</span><span class="s">'col4'</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">16</span><span class="p">,</span> <span class="mi">25</span><span class="p">,</span><span class="mi">36</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">df1_2</span>
  <span class="n">col1</span>  <span class="n">col2</span>  <span class="n">col3</span>  <span class="n">col4</span>
<span class="mi">0</span>    <span class="n">A</span>     <span class="mi">1</span>   <span class="mf">0.1</span>     <span class="mi">1</span>
<span class="mi">1</span>    <span class="n">B</span>     <span class="mi">2</span>   <span class="mf">0.2</span>     <span class="mi">4</span>
<span class="mi">2</span>    <span class="n">C</span>     <span class="mi">3</span>   <span class="mf">0.3</span>     <span class="mi">9</span>
<span class="mi">3</span>    <span class="n">D</span>     <span class="mi">4</span>   <span class="mf">0.4</span>    <span class="mi">16</span>
<span class="mi">4</span>    <span class="n">E</span>     <span class="mi">5</span>   <span class="mf">0.5</span>    <span class="mi">25</span>
<span class="mi">5</span>    <span class="n">F</span>     <span class="mi">6</span>   <span class="mf">0.6</span>    <span class="mi">36</span>

<span class="c1"># merge/append two dataframes
# create a new dataframe 
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df10</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">({</span><span class="s">'col1'</span><span class="p">:[</span><span class="s">'X'</span><span class="p">,</span> <span class="s">'Y'</span><span class="p">],</span> <span class="s">'col2'</span><span class="p">:[</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">],</span> <span class="s">'col3'</span><span class="p">:[</span><span class="mf">0.7</span><span class="p">,</span><span class="mf">0.8</span><span class="p">]})</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">df10</span>
  <span class="n">col1</span>  <span class="n">col2</span>  <span class="n">col3</span>
<span class="mi">0</span>    <span class="n">X</span>     <span class="mi">7</span>   <span class="mf">0.7</span>
<span class="mi">1</span>    <span class="n">Y</span>     <span class="mi">8</span>   <span class="mf">0.8</span>

<span class="c1"># mereg df10 with df1_2
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df1_2</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">df10</span><span class="p">)</span>
  <span class="n">col1</span>  <span class="n">col2</span>  <span class="n">col3</span>  <span class="n">col4</span>
<span class="mi">0</span>    <span class="n">A</span>     <span class="mi">1</span>   <span class="mf">0.1</span>   <span class="mf">1.0</span>
<span class="mi">1</span>    <span class="n">B</span>     <span class="mi">2</span>   <span class="mf">0.2</span>   <span class="mf">4.0</span>
<span class="mi">2</span>    <span class="n">C</span>     <span class="mi">3</span>   <span class="mf">0.3</span>   <span class="mf">9.0</span>
<span class="mi">3</span>    <span class="n">D</span>     <span class="mi">4</span>   <span class="mf">0.4</span>  <span class="mf">16.0</span>
<span class="mi">4</span>    <span class="n">E</span>     <span class="mi">5</span>   <span class="mf">0.5</span>  <span class="mf">25.0</span>
<span class="mi">5</span>    <span class="n">F</span>     <span class="mi">6</span>   <span class="mf">0.6</span>  <span class="mf">36.0</span>
<span class="mi">0</span>    <span class="n">X</span>     <span class="mi">7</span>   <span class="mf">0.7</span>   <span class="n">NaN</span>
<span class="mi">1</span>    <span class="n">Y</span>     <span class="mi">8</span>   <span class="mf">0.8</span>   <span class="n">NaN</span>

<span class="c1"># if you set ignore_index=True, the index order will not be preserved
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df1_2</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">df10</span><span class="p">,</span> <span class="n">ignore_index</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
  <span class="n">col1</span>  <span class="n">col2</span>  <span class="n">col3</span>  <span class="n">col4</span>
<span class="mi">0</span>    <span class="n">A</span>     <span class="mi">1</span>   <span class="mf">0.1</span>   <span class="mf">1.0</span>
<span class="mi">1</span>    <span class="n">B</span>     <span class="mi">2</span>   <span class="mf">0.2</span>   <span class="mf">4.0</span>
<span class="mi">2</span>    <span class="n">C</span>     <span class="mi">3</span>   <span class="mf">0.3</span>   <span class="mf">9.0</span>
<span class="mi">3</span>    <span class="n">D</span>     <span class="mi">4</span>   <span class="mf">0.4</span>  <span class="mf">16.0</span>
<span class="mi">4</span>    <span class="n">E</span>     <span class="mi">5</span>   <span class="mf">0.5</span>  <span class="mf">25.0</span>
<span class="mi">5</span>    <span class="n">F</span>     <span class="mi">6</span>   <span class="mf">0.6</span>  <span class="mf">36.0</span>
<span class="mi">6</span>    <span class="n">X</span>     <span class="mi">7</span>   <span class="mf">0.7</span>   <span class="n">NaN</span>
<span class="mi">7</span>    <span class="n">Y</span>     <span class="mi">8</span>   <span class="mf">0.8</span>   <span class="n">NaN</span>

</code></pre></div></div>

<h2 id="export-dataframes-to-file"><span style="color:#33a8ff">Export dataframes to file</span></h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># check above to create dataframe objects (df1)
# Export to CSV file
# with first column as index
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df1</span><span class="p">.</span><span class="n">to_csv</span><span class="p">(</span><span class="s">"df1.csv"</span><span class="p">)</span>
<span class="c1"># do not export index as first column
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df1</span><span class="p">.</span><span class="n">to_csv</span><span class="p">(</span><span class="s">"df1.csv"</span><span class="p">,</span> <span class="n">index</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
<span class="c1"># Export to TAB file
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df1</span><span class="p">.</span><span class="n">to_csv</span><span class="p">(</span><span class="s">"df1.csv"</span><span class="p">,</span> <span class="n">sep</span><span class="o">=</span><span class="s">'</span><span class="se">\t</span><span class="s">'</span><span class="p">)</span>
<span class="c1"># no column headers
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df1</span><span class="p">.</span><span class="n">to_csv</span><span class="p">(</span><span class="s">"df1.csv"</span><span class="p">,</span> <span class="n">header</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
<span class="c1"># compress output file (works with pandas 1.0.0)
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df1</span><span class="p">.</span><span class="n">to_csv</span><span class="p">(</span><span class="s">"df1.zip"</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="p">{</span><span class="s">'method'</span><span class="p">:</span><span class="s">'zip'</span><span class="p">,</span> <span class="s">'archive_name'</span><span class="p">:</span><span class="s">'df1.csv'</span><span class="p">})</span>
<span class="c1"># export to excel file
# use similar option as above for headers and index
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df1</span><span class="p">.</span><span class="n">to_excel</span><span class="p">(</span><span class="s">"df1.xlsx"</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="convert-series-to-dataframes"><span style="color:#33a8ff">Convert series to dataframes</span></h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># create pandas series
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df11</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">Series</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">])</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">df11</span>
<span class="mi">0</span>    <span class="mi">1</span>
<span class="mi">1</span>    <span class="mi">2</span>
<span class="mi">2</span>    <span class="mi">3</span>
<span class="n">dtype</span><span class="p">:</span> <span class="n">int64</span>

<span class="c1"># convert to dataframe
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df11</span><span class="p">.</span><span class="n">to_frame</span><span class="p">()</span>
   <span class="mi">0</span>
<span class="mi">0</span>  <span class="mi">1</span>
<span class="mi">1</span>  <span class="mi">2</span>
<span class="mi">2</span>  <span class="mi">3</span>

<span class="c1"># add column name
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df11</span><span class="p">.</span><span class="n">to_frame</span><span class="p">(</span><span class="s">'col1'</span><span class="p">)</span>
   <span class="n">col1</span>
<span class="mi">0</span>     <span class="mi">1</span>
<span class="mi">1</span>     <span class="mi">2</span>
<span class="mi">2</span>     <span class="mi">3</span>
</code></pre></div></div>

<h2 id="convert-numpy-arrays-to-dataframes"><span style="color:#33a8ff">Convert numpy arrays to dataframes</span></h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">x</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([[</span> <span class="mi">1</span><span class="p">,</span>  <span class="mi">2</span><span class="p">],</span> <span class="p">[</span> <span class="mi">3</span> <span class="p">,</span><span class="mi">4</span><span class="p">]])</span>

<span class="c1"># convert to dataframe
</span><span class="n">df12</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">({</span><span class="s">'col1'</span><span class="p">:</span><span class="n">x</span><span class="p">[:,</span><span class="mi">0</span><span class="p">],</span> <span class="s">'col2'</span><span class="p">:</span><span class="n">x</span><span class="p">[:,</span><span class="mi">1</span><span class="p">]})</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">df12</span>
   <span class="n">col1</span>  <span class="n">col2</span>
<span class="mi">0</span>     <span class="mi">1</span>     <span class="mi">2</span>
<span class="mi">1</span>     <span class="mi">3</span>     <span class="mi">4</span>
</code></pre></div></div>

<h2 id="convert-dataframe-to-numpy-arrays-"><span style="color:#33a8ff">Convert dataframe to numpy arrays </span></h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># see df12 dataframe in above section
# convert whole dataframe to numpy array
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df12</span><span class="p">.</span><span class="n">to_numpy</span><span class="p">()</span>
<span class="n">array</span><span class="p">([[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">],</span>
       <span class="p">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">]])</span>

<span class="c1"># extract specific column as numpy array
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df12</span><span class="p">[</span><span class="s">'col1'</span><span class="p">].</span><span class="n">to_numpy</span><span class="p">()</span>
<span class="n">array</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="p">])</span>

<span class="c1"># extract multiple columns as numpy array
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df12</span><span class="p">[[</span><span class="s">'col1'</span><span class="p">,</span><span class="s">'col2'</span><span class="p">]].</span><span class="n">to_numpy</span><span class="p">()</span>
<span class="n">array</span><span class="p">([[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">],</span>
       <span class="p">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">]])</span>

<span class="c1"># extract specific row as numpy array
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df12</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">to_numpy</span><span class="p">()</span>
<span class="n">array</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">])</span>

<span class="c1"># extract multiple row as numpy array
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df12</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="mi">1</span><span class="p">].</span><span class="n">to_numpy</span><span class="p">()</span>
<span class="n">array</span><span class="p">([[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">],</span>
       <span class="p">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">]])</span>
</code></pre></div></div>

<h2 id="find-min-and-max-values-in-dataframe-"><span style="color:#33a8ff">Find min and max values in dataframe </span></h2>
<h1 id="create-a-dataframe-with-some-random-numbers">Create a dataframe with some random numbers</h1>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">"https://reneshbedre.github.io/assets/posts/anova/onewayanova.txt"</span><span class="p">,</span> <span class="n">sep</span><span class="o">=</span><span class="s">"</span><span class="se">\t</span><span class="s">"</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">df</span><span class="p">.</span><span class="n">head</span><span class="p">()</span>
    <span class="n">A</span>   <span class="n">B</span>   <span class="n">C</span>   <span class="n">D</span>
<span class="mi">0</span>  <span class="mi">25</span>  <span class="mi">45</span>  <span class="mi">30</span>  <span class="mi">54</span>
<span class="mi">1</span>  <span class="mi">30</span>  <span class="mi">55</span>  <span class="mi">29</span>  <span class="mi">60</span>
<span class="mi">2</span>  <span class="mi">28</span>  <span class="mi">29</span>  <span class="mi">33</span>  <span class="mi">51</span>
<span class="mi">3</span>  <span class="mi">36</span>  <span class="mi">56</span>  <span class="mi">37</span>  <span class="mi">62</span>
<span class="mi">4</span>  <span class="mi">29</span>  <span class="mi">40</span>  <span class="mi">27</span>  <span class="mi">73</span>

<span class="c1"># find min in every column
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df</span><span class="p">.</span><span class="nb">min</span><span class="p">()</span>
<span class="n">A</span>    <span class="mi">25</span>
<span class="n">B</span>    <span class="mi">29</span>
<span class="n">C</span>    <span class="mi">27</span>
<span class="n">D</span>    <span class="mi">51</span>
<span class="n">dtype</span><span class="p">:</span> <span class="n">int64</span>

<span class="c1"># find max in every column
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df</span><span class="p">.</span><span class="nb">max</span><span class="p">()</span>
<span class="n">A</span>    <span class="mi">36</span>
<span class="n">B</span>    <span class="mi">56</span>
<span class="n">C</span>    <span class="mi">37</span>
<span class="n">D</span>    <span class="mi">73</span>
<span class="n">dtype</span><span class="p">:</span> <span class="n">int64</span>

<span class="c1"># find min and max in every rows
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df</span><span class="p">.</span><span class="nb">min</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">df</span><span class="p">.</span><span class="nb">max</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>

<span class="c1"># find max and min from whole dataframe
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">np</span><span class="p">.</span><span class="nb">min</span><span class="p">(</span><span class="n">df</span><span class="p">.</span><span class="nb">min</span><span class="p">().</span><span class="n">to_numpy</span><span class="p">())</span>
<span class="mi">25</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">np</span><span class="p">.</span><span class="nb">max</span><span class="p">(</span><span class="n">df</span><span class="p">.</span><span class="nb">max</span><span class="p">().</span><span class="n">to_numpy</span><span class="p">())</span>
<span class="mi">73</span>

<span class="c1"># find min and max in particular columns or rows
# max in column A
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df</span><span class="p">[</span><span class="s">'A'</span><span class="p">].</span><span class="nb">max</span><span class="p">()</span>
<span class="mi">36</span>
<span class="c1"># max in row 2
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nb">max</span><span class="p">()</span>
<span class="mi">60</span>
<span class="c1"># multiple columns
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df</span><span class="p">[[</span><span class="s">'A'</span><span class="p">,</span> <span class="s">'D'</span><span class="p">]].</span><span class="nb">max</span><span class="p">()</span>
<span class="n">A</span>    <span class="mi">36</span>
<span class="n">D</span>    <span class="mi">73</span>
<span class="n">dtype</span><span class="p">:</span> <span class="n">int64</span>
<span class="c1"># multiple rows (0 and 1 row)
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="mi">1</span><span class="p">,].</span><span class="nb">max</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
<span class="mi">0</span>    <span class="mi">54</span>
<span class="mi">1</span>    <span class="mi">60</span>
<span class="n">dtype</span><span class="p">:</span> <span class="n">int64</span>

<span class="c1"># get row index of max and min values for each column
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df</span><span class="p">.</span><span class="n">idxmax</span><span class="p">()</span>
<span class="n">A</span>    <span class="mi">3</span>
<span class="n">B</span>    <span class="mi">3</span>
<span class="n">C</span>    <span class="mi">3</span>
<span class="n">D</span>    <span class="mi">4</span>
<span class="n">dtype</span><span class="p">:</span> <span class="n">int64</span>
<span class="c1"># for min df.idxmin()
</span>
<span class="c1"># to skip missing values (NaN),  default skipna is True
# to not to skip missing values add skipna=False
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df</span><span class="p">.</span><span class="nb">min</span><span class="p">(</span><span class="n">skipna</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>


</code></pre></div></div>

<h2 id="modifying-dataframe-columns"><span style="color:#33a8ff">Modifying dataframe columns</span></h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">"https://reneshbedre.github.io/assets/posts/anova/onewayanova.txt"</span><span class="p">,</span> <span class="n">sep</span><span class="o">=</span><span class="s">"</span><span class="se">\t</span><span class="s">"</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">df</span><span class="p">.</span><span class="n">head</span><span class="p">()</span>
    <span class="n">A</span>   <span class="n">B</span>   <span class="n">C</span>   <span class="n">D</span>
<span class="mi">0</span>  <span class="mi">25</span>  <span class="mi">45</span>  <span class="mi">30</span>  <span class="mi">54</span>
<span class="mi">1</span>  <span class="mi">30</span>  <span class="mi">55</span>  <span class="mi">29</span>  <span class="mi">60</span>
<span class="mi">2</span>  <span class="mi">28</span>  <span class="mi">29</span>  <span class="mi">33</span>  <span class="mi">51</span>
<span class="mi">3</span>  <span class="mi">36</span>  <span class="mi">56</span>  <span class="mi">37</span>  <span class="mi">62</span>
<span class="mi">4</span>  <span class="mi">29</span>  <span class="mi">40</span>  <span class="mi">27</span>  <span class="mi">73</span>

<span class="c1"># check column names
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df</span><span class="p">.</span><span class="n">columns</span>
<span class="n">Index</span><span class="p">([</span><span class="s">'A'</span><span class="p">,</span> <span class="s">'B'</span><span class="p">,</span> <span class="s">'C'</span><span class="p">,</span> <span class="s">'D'</span><span class="p">],</span> <span class="n">dtype</span><span class="o">=</span><span class="s">'object'</span><span class="p">)</span>

<span class="c1"># change column names
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df</span><span class="p">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s">'A1'</span><span class="p">,</span> <span class="s">'B1'</span><span class="p">,</span> <span class="s">'C1'</span><span class="p">,</span> <span class="s">'D1'</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">df</span><span class="p">.</span><span class="n">head</span><span class="p">()</span>
    <span class="n">A1</span> 	<span class="n">B1</span> 	<span class="n">C1</span> 	<span class="n">D1</span>
<span class="mi">0</span> 	<span class="mi">25</span> 	<span class="mi">45</span> 	<span class="mi">30</span> 	<span class="mi">54</span>
<span class="mi">1</span> 	<span class="mi">30</span> 	<span class="mi">55</span> 	<span class="mi">29</span> 	<span class="mi">60</span>
<span class="mi">2</span> 	<span class="mi">28</span> 	<span class="mi">29</span> 	<span class="mi">33</span> 	<span class="mi">51</span>
<span class="mi">3</span> 	<span class="mi">36</span> 	<span class="mi">56</span> 	<span class="mi">37</span> 	<span class="mi">62</span>
<span class="mi">4</span> 	<span class="mi">29</span> 	<span class="mi">40</span> 	<span class="mi">27</span> 	<span class="mi">73</span>

<span class="c1"># add new column
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df</span><span class="p">[</span><span class="s">'E'</span><span class="p">]</span><span class="o">=</span><span class="p">[</span><span class="mi">55</span><span class="p">,</span><span class="mi">58</span><span class="p">,</span><span class="mi">61</span><span class="p">,</span><span class="mi">70</span><span class="p">,</span><span class="mi">85</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">df</span><span class="p">.</span><span class="n">head</span><span class="p">()</span>
    <span class="n">A1</span> 	<span class="n">B1</span> 	<span class="n">C1</span> 	<span class="n">D1</span> 	<span class="n">E</span>
<span class="mi">0</span> 	<span class="mi">25</span> 	<span class="mi">45</span> 	<span class="mi">30</span> 	<span class="mi">54</span> 	<span class="mi">55</span>
<span class="mi">1</span> 	<span class="mi">30</span> 	<span class="mi">55</span> 	<span class="mi">29</span> 	<span class="mi">60</span> 	<span class="mi">58</span>
<span class="mi">2</span> 	<span class="mi">28</span> 	<span class="mi">29</span> 	<span class="mi">33</span> 	<span class="mi">51</span> 	<span class="mi">61</span>
<span class="mi">3</span> 	<span class="mi">36</span> 	<span class="mi">56</span> 	<span class="mi">37</span> 	<span class="mi">62</span> 	<span class="mi">70</span>
<span class="mi">4</span> 	<span class="mi">29</span> 	<span class="mi">40</span> 	<span class="mi">27</span> 	<span class="mi">73</span> 	<span class="mi">85</span>

<span class="c1"># drop column D1 and E
# axis=1 refers to column labels (use 0 for index labels)
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df</span><span class="p">.</span><span class="n">drop</span><span class="p">([</span><span class="s">'D1'</span><span class="p">,</span> <span class="s">'E'</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
    <span class="n">A1</span> 	<span class="n">B1</span> 	<span class="n">C1</span>
<span class="mi">0</span> 	<span class="mi">25</span> 	<span class="mi">45</span> 	<span class="mi">30</span>
<span class="mi">1</span> 	<span class="mi">30</span> 	<span class="mi">55</span> 	<span class="mi">29</span>
<span class="mi">2</span> 	<span class="mi">28</span> 	<span class="mi">29</span> 	<span class="mi">33</span>
<span class="mi">3</span> 	<span class="mi">36</span> 	<span class="mi">56</span> 	<span class="mi">37</span>
<span class="mi">4</span> 	<span class="mi">29</span> 	<span class="mi">40</span> 	<span class="mi">27</span>

<span class="c1"># rename specific columns
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df</span><span class="p">.</span><span class="n">rename</span><span class="p">(</span><span class="n">columns</span><span class="o">=</span><span class="p">{</span><span class="s">"A1"</span><span class="p">:</span> <span class="s">"a1"</span><span class="p">,</span> <span class="s">"B1"</span><span class="p">:</span> <span class="s">"b1"</span><span class="p">})</span>
    <span class="n">a1</span> 	<span class="n">b1</span> 	<span class="n">C1</span> 	<span class="n">D1</span> 	<span class="n">E</span>
<span class="mi">0</span> 	<span class="mi">25</span> 	<span class="mi">45</span> 	<span class="mi">30</span> 	<span class="mi">54</span> 	<span class="mi">55</span>
<span class="mi">1</span> 	<span class="mi">30</span> 	<span class="mi">55</span> 	<span class="mi">29</span> 	<span class="mi">60</span> 	<span class="mi">58</span>
<span class="mi">2</span> 	<span class="mi">28</span> 	<span class="mi">29</span> 	<span class="mi">33</span> 	<span class="mi">51</span> 	<span class="mi">61</span>
<span class="mi">3</span> 	<span class="mi">36</span> 	<span class="mi">56</span> 	<span class="mi">37</span> 	<span class="mi">62</span> 	<span class="mi">70</span>
<span class="mi">4</span> 	<span class="mi">29</span> 	<span class="mi">40</span> 	<span class="mi">27</span> 	<span class="mi">73</span> 	<span class="mi">85</span>
</code></pre></div></div>

<h2 id="join-two-dataframes-left-right-outer-and-inner-joins"><span style="color:#33a8ff">join two dataframes (left, right, outer and inner joins)</span></h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">df1</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">({</span><span class="s">'col1'</span><span class="p">:[</span><span class="s">'A'</span><span class="p">,</span> <span class="s">'B'</span><span class="p">,</span> <span class="s">'C'</span><span class="p">,</span> <span class="s">'D'</span><span class="p">,</span> <span class="s">'E'</span><span class="p">,</span> <span class="s">'F'</span><span class="p">,</span> <span class="s">'I'</span><span class="p">],</span> <span class="s">'col2'</span><span class="p">:[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">8</span><span class="p">]</span> <span class="p">})</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">df1</span>
  <span class="n">col1</span>  <span class="n">col2</span>
<span class="mi">0</span>    <span class="n">A</span>     <span class="mi">1</span>
<span class="mi">1</span>    <span class="n">B</span>     <span class="mi">2</span>
<span class="mi">2</span>    <span class="n">C</span>     <span class="mi">3</span>
<span class="mi">3</span>    <span class="n">D</span>     <span class="mi">4</span>
<span class="mi">4</span>    <span class="n">E</span>     <span class="mi">5</span>
<span class="mi">5</span>    <span class="n">F</span>     <span class="mi">6</span>
<span class="mi">6</span>    <span class="n">I</span>     <span class="mi">8</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">df2</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">({</span><span class="s">'col1'</span><span class="p">:[</span><span class="s">'A'</span><span class="p">,</span> <span class="s">'B'</span><span class="p">,</span> <span class="s">'C'</span><span class="p">,</span> <span class="s">'D'</span><span class="p">,</span> <span class="s">'E'</span><span class="p">,</span> <span class="s">'G'</span><span class="p">],</span> <span class="s">'col3'</span><span class="p">:[</span><span class="mf">0.1</span><span class="p">,</span><span class="mf">0.2</span><span class="p">,</span><span class="mf">0.3</span><span class="p">,</span><span class="mf">0.4</span><span class="p">,</span><span class="mf">0.5</span><span class="p">,</span><span class="mf">0.7</span><span class="p">]</span> <span class="p">})</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">df2</span>
  <span class="n">col1</span>  <span class="n">col3</span>
<span class="mi">0</span>    <span class="n">A</span>   <span class="mf">0.1</span>
<span class="mi">1</span>    <span class="n">B</span>   <span class="mf">0.2</span>
<span class="mi">2</span>    <span class="n">C</span>   <span class="mf">0.3</span>
<span class="mi">3</span>    <span class="n">D</span>   <span class="mf">0.4</span>
<span class="mi">4</span>    <span class="n">E</span>   <span class="mf">0.5</span>
<span class="mi">5</span>    <span class="n">G</span>   <span class="mf">0.7</span>

<span class="c1"># left join df1 and df2 (join based on all keys from df1)
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df_left_joined</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">merge</span><span class="p">(</span><span class="n">df1</span><span class="p">,</span> <span class="n">df2</span><span class="p">,</span> <span class="n">how</span><span class="o">=</span><span class="s">'left'</span><span class="p">,</span> <span class="n">on</span><span class="o">=</span><span class="s">'col1'</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">df_left_joined</span>
  <span class="n">col1</span>  <span class="n">col2</span>  <span class="n">col3</span>
<span class="mi">0</span>    <span class="n">A</span>     <span class="mi">1</span>   <span class="mf">0.1</span>
<span class="mi">1</span>    <span class="n">B</span>     <span class="mi">2</span>   <span class="mf">0.2</span>
<span class="mi">2</span>    <span class="n">C</span>     <span class="mi">3</span>   <span class="mf">0.3</span>
<span class="mi">3</span>    <span class="n">D</span>     <span class="mi">4</span>   <span class="mf">0.4</span>
<span class="mi">4</span>    <span class="n">E</span>     <span class="mi">5</span>   <span class="mf">0.5</span>
<span class="mi">5</span>    <span class="n">F</span>     <span class="mi">6</span>   <span class="n">NaN</span>
<span class="mi">6</span>    <span class="n">I</span>     <span class="mi">8</span>   <span class="n">NaN</span>

<span class="c1"># right join df1 and df2 (join based on all keys from df2)
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df_right_joined</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">merge</span><span class="p">(</span><span class="n">df1</span><span class="p">,</span> <span class="n">df2</span><span class="p">,</span> <span class="n">how</span><span class="o">=</span><span class="s">'right'</span><span class="p">,</span> <span class="n">on</span><span class="o">=</span><span class="s">'col1'</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">df_right_joined</span>
  <span class="n">col1</span>  <span class="n">col2</span>  <span class="n">col3</span>
<span class="mi">0</span>    <span class="n">A</span>   <span class="mf">1.0</span>   <span class="mf">0.1</span>
<span class="mi">1</span>    <span class="n">B</span>   <span class="mf">2.0</span>   <span class="mf">0.2</span>
<span class="mi">2</span>    <span class="n">C</span>   <span class="mf">3.0</span>   <span class="mf">0.3</span>
<span class="mi">3</span>    <span class="n">D</span>   <span class="mf">4.0</span>   <span class="mf">0.4</span>
<span class="mi">4</span>    <span class="n">E</span>   <span class="mf">5.0</span>   <span class="mf">0.5</span>
<span class="mi">5</span>    <span class="n">G</span>   <span class="n">NaN</span>   <span class="mf">0.7</span>

<span class="c1"># outer join df1 and df2 (join based on union of keys of df1 and df2)
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df_outer_joined</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">merge</span><span class="p">(</span><span class="n">df1</span><span class="p">,</span> <span class="n">df2</span><span class="p">,</span> <span class="n">how</span><span class="o">=</span><span class="s">'outer'</span><span class="p">,</span> <span class="n">on</span><span class="o">=</span><span class="s">'col1'</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">df_outer_joined</span>
  <span class="n">col1</span>  <span class="n">col2</span>  <span class="n">col3</span>
<span class="mi">0</span>    <span class="n">A</span>   <span class="mf">1.0</span>   <span class="mf">0.1</span>
<span class="mi">1</span>    <span class="n">B</span>   <span class="mf">2.0</span>   <span class="mf">0.2</span>
<span class="mi">2</span>    <span class="n">C</span>   <span class="mf">3.0</span>   <span class="mf">0.3</span>
<span class="mi">3</span>    <span class="n">D</span>   <span class="mf">4.0</span>   <span class="mf">0.4</span>
<span class="mi">4</span>    <span class="n">E</span>   <span class="mf">5.0</span>   <span class="mf">0.5</span>
<span class="mi">5</span>    <span class="n">F</span>   <span class="mf">6.0</span>   <span class="n">NaN</span>
<span class="mi">6</span>    <span class="n">I</span>   <span class="mf">8.0</span>   <span class="n">NaN</span>
<span class="mi">7</span>    <span class="n">G</span>   <span class="n">NaN</span>   <span class="mf">0.7</span>

<span class="c1"># inner join df1 and df2 (join based on common keys of df1 and df2)
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df_inner_joined</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">merge</span><span class="p">(</span><span class="n">df1</span><span class="p">,</span> <span class="n">df2</span><span class="p">,</span> <span class="n">how</span><span class="o">=</span><span class="s">'inner'</span><span class="p">,</span> <span class="n">on</span><span class="o">=</span><span class="s">'col1'</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">df_inner_joined</span>
  <span class="n">col1</span>  <span class="n">col2</span>  <span class="n">col3</span>
<span class="mi">0</span>    <span class="n">A</span>     <span class="mi">1</span>   <span class="mf">0.1</span>
<span class="mi">1</span>    <span class="n">B</span>     <span class="mi">2</span>   <span class="mf">0.2</span>
<span class="mi">2</span>    <span class="n">C</span>     <span class="mi">3</span>   <span class="mf">0.3</span>
<span class="mi">3</span>    <span class="n">D</span>     <span class="mi">4</span>   <span class="mf">0.4</span>
<span class="mi">4</span>    <span class="n">E</span>     <span class="mi">5</span>   <span class="mf">0.5</span>
</code></pre></div></div>

<h2 id="correlation-analysis-with-pandas-dataframe"><span style="color:#33a8ff">Correlation analysis with pandas dataframe</span></h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">"https://reneshbedre.github.io/assets/posts/anova/onewayanova.txt"</span><span class="p">,</span> <span class="n">sep</span><span class="o">=</span><span class="s">"</span><span class="se">\t</span><span class="s">"</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">df</span><span class="p">.</span><span class="n">head</span><span class="p">()</span>
    <span class="n">A</span>   <span class="n">B</span>   <span class="n">C</span>   <span class="n">D</span>
<span class="mi">0</span>  <span class="mi">25</span>  <span class="mi">45</span>  <span class="mi">30</span>  <span class="mi">54</span>
<span class="mi">1</span>  <span class="mi">30</span>  <span class="mi">55</span>  <span class="mi">29</span>  <span class="mi">60</span>
<span class="mi">2</span>  <span class="mi">28</span>  <span class="mi">29</span>  <span class="mi">33</span>  <span class="mi">51</span>
<span class="mi">3</span>  <span class="mi">36</span>  <span class="mi">56</span>  <span class="mi">37</span>  <span class="mi">62</span>
<span class="mi">4</span>  <span class="mi">29</span>  <span class="mi">40</span>  <span class="mi">27</span>  <span class="mi">73</span>

<span class="c1"># perform pearson correlation analysis
# check more methods at https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.corr.html
# returns correlation coefficient matrix
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df</span><span class="p">.</span><span class="n">corr</span><span class="p">(</span><span class="n">method</span><span class="o">=</span><span class="s">'pearson'</span><span class="p">)</span>
          <span class="n">A</span>         <span class="n">B</span>         <span class="n">C</span>         <span class="n">D</span>
<span class="n">A</span>  <span class="mf">1.000000</span>  <span class="mf">0.569327</span>  <span class="mf">0.657544</span>  <span class="mf">0.341802</span>
<span class="n">B</span>  <span class="mf">0.569327</span>  <span class="mf">1.000000</span>  <span class="mf">0.194615</span>  <span class="mf">0.264710</span>
<span class="n">C</span>  <span class="mf">0.657544</span>  <span class="mf">0.194615</span>  <span class="mf">1.000000</span> <span class="o">-</span><span class="mf">0.391609</span>
<span class="n">D</span>  <span class="mf">0.341802</span>  <span class="mf">0.264710</span> <span class="o">-</span><span class="mf">0.391609</span>  <span class="mf">1.000000</span>
</code></pre></div></div>

<h2 id="compare-all-rows-or-columns"><span style="color:#33a8ff">Compare all rows or columns</span></h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">({</span><span class="s">'col1'</span><span class="p">:[</span><span class="s">'0'</span><span class="p">,</span> <span class="s">'0'</span><span class="p">,</span> <span class="s">'0'</span> <span class="p">],</span> <span class="s">'col2'</span><span class="p">:[</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">],</span> <span class="s">'col3'</span><span class="p">:[</span><span class="mi">0</span><span class="p">,</span><span class="mf">0.2</span><span class="p">,</span><span class="mf">0.3</span><span class="p">]})</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">df</span>
  <span class="n">col1</span>  <span class="n">col2</span>  <span class="n">col3</span>
<span class="mi">0</span>    <span class="mi">0</span>     <span class="mi">0</span>   <span class="mf">0.0</span>
<span class="mi">1</span>    <span class="mi">0</span>     <span class="mi">2</span>   <span class="mf">0.2</span>
<span class="mi">2</span>    <span class="mi">0</span>     <span class="mi">3</span>   <span class="mf">0.3</span>

<span class="c1"># delete all rows where all columns are zero
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df</span><span class="p">[(</span><span class="n">df</span><span class="o">!=</span><span class="mi">0</span><span class="p">).</span><span class="nb">all</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)]</span>
  <span class="n">col1</span>  <span class="n">col2</span>  <span class="n">col3</span>
<span class="mi">1</span>    <span class="mi">0</span>     <span class="mi">2</span>   <span class="mf">0.2</span>
<span class="mi">2</span>    <span class="mi">0</span>     <span class="mi">3</span>   <span class="mf">0.3</span>

<span class="c1"># get all rows where columns sum &gt; 3
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df</span><span class="p">[(</span><span class="n">df</span><span class="p">.</span><span class="nb">sum</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span><span class="o">&gt;</span><span class="mi">3</span><span class="p">)]</span>
  <span class="n">col1</span>  <span class="n">col2</span>  <span class="n">col3</span>
<span class="mi">2</span>    <span class="mi">0</span>     <span class="mi">3</span>   <span class="mf">0.3</span>
</code></pre></div></div>

<p><strong><span style="color:#33a8ff">How to cite?</span></strong></p>

<p>Bedre, R. (2020, February 07). Data handling and manipulation with Pandas. 
https://reneshbedre.github.io/blog/pandas.html</p>

<p><span style="color:#9e9696">If you have any questions, comments or recommendations, please email me at 
<b>reneshbe@gmail.com</b></span></p>

<p><span style="color:#9e9696"><i> Last updated: June 25, 2020</i> </span></p>

<p>
<!-- Begin Mailchimp Signup Form -->
<!--
<link href="//cdn-images.mailchimp.com/embedcode/horizontal-slim-10_7.css" rel="stylesheet" type="text/css">
<style type="text/css">
	#mc_embed_signup{background:#fff; clear:left; font:14px Helvetica,Arial,sans-serif; width:100%;}
	/* Add your own Mailchimp form style overrides in your site stylesheet or in this style block.
	   We recommend moving this block and the preceding CSS link to the HEAD of your HTML file. */
</style>
<div id="mc_embed_signup">
<form action="https://github.us10.list-manage.com/subscribe/post?u=1c0202ed60d33515742eec50a&amp;id=b17e2351b6" method="post" id="mc-embedded-subscribe-form" name="mc-embedded-subscribe-form" class="validate" target="_blank" novalidate>
    <div id="mc_embed_signup_scroll">
	<label for="mce-EMAIL">Subscribe for new articles</label>
	<input type="email" value="" name="EMAIL" class="email" id="mce-EMAIL" placeholder="email address" required>
-->
    <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
<!--
    <div style="position: absolute; left: -5000px;" aria-hidden="true"><input type="text" name="b_1c0202ed60d33515742eec50a_b17e2351b6" tabindex="-1" value=""></div>
    <div class="clear"><input type="submit" value="Subscribe" name="subscribe" id="mc-embedded-subscribe" class="button"></div>
    </div>
</form>
</div>
-->
<!--End mc_embed_signup-->
</p>

<p>
<a rel="license" href="http://creativecommons.org/licenses/by/4.0/" target="_blank"><img alt="Creative Commons License" style="border-width:0" src="https://i.creativecommons.org/l/by/4.0/88x31.png" /></a><br />This work is licensed under a <a rel="license" href="http://creativecommons.org/licenses/by/4.0/" target="_blank">Creative Commons Attribution 4.0 International License</a>.
</p>
:ET