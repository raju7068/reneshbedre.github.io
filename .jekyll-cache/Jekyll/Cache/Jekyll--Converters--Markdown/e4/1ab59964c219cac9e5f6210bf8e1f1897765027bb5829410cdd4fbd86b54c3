I"
œ<p>
<!--

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css">

<style>
    .share-box a {
  display: inline-block;
  -webkit-box-shadow: 0 0 1px #777;
  box-shadow: 0 0 1px #777;
  padding: 5px 12px;
  margin-right: 5px;
  margin-bottom: 5px;
  text-decoration: none; }
  .share-box a:hover {
    text-decoration: none;
    -webkit-transition: background-color 200ms linear;
    -ms-transition: background-color 200ms linear;
    transition: background-color 200ms linear; }

.f {
  color: #3b5998; }
  .f:hover {
    color: #fff;
    background-color: #3b5998; }

.t {
  color: #4099FF; }
  .t:hover {
    color: #fff;
    background-color: #4099FF; }

.g {
  color: #d34836; }
  .g:hover {
    color: #fff;
    background-color: #d34836; }

.r {
  color: #ff5700; }
  .r:hover {
    color: #fff;
    background-color: #ff5700; }

.l {
  color: #0077b5; }
  .l:hover {
    color: #fff;
    background-color: #0077b5; }

.e {
  color: #444444; }
  .e:hover {
    color: #fff;
    background-color: #444444; }
</style>

<div class="share-box">
<a class="f" href="https://www.facebook.com/sharer/sharer.php?u=http://localhost:4000/blog/mlr.html" onclick="window.open(this.href, 'mywin',
'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;" ><i class="fab fa-facebook-f"></i></a>

<a class="t" href="https://twitter.com/intent/tweet?text=&url=http://localhost:4000/blog/mlr.html" onclick="window.open(this.href, 'mywin',
'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;"><i class="fab fa-twitter"></i></a>

  <a class="g" href="https://plus.google.com/share?url=http://localhost:4000/blog/mlr.html" onclick="window.open(this.href, 'mywin',
'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;" ><i class="fab fa-google-plus-square"></i></a>


<a class="r" href="http://www.reddit.com/submit?url=http://localhost:4000/blog/mlr.html" onclick="window.open(this.href, 'mywin',
'left=20,top=20,width=900,height=500,toolbar=1,resizable=0'); return false;" ><i class="fab fa-reddit"></i></a>

<a class="l" href="https://www.linkedin.com/shareArticle?mini=true&url=http://localhost:4000/blog/mlr.html" onclick="window.open(this.href, 'mywin',
'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;" ><i class="fab fa-linkedin-in"></i></a>

<a class="e" href="mailto:?subject=&amp;body=Check out this site http://localhost:4000/blog/mlr.html"><i class="fas fa-envelope-square"></i></a>
-->

  <!--
    <a href="https://twitter.com/renbedre?ref_src=twsrc%5Etfw" class="twitter-follow-button" data-show-count="false">Follow @renbedre</a><script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
-->

<!--
</div>

-->

</p>

<h2 id="multiple-linear-regression-mlr"><span style="color:#33a8ff">Multiple Linear Regression (MLR)?</span></h2>
<ul>
  <li>Before starting this tutorial, read basics about the <a href="http://localhost:4000/blog/linearreg.html">linear regression</a></li>
  <li>In MLR, linear relationships between Y (dependent/response/criterion/endogeneous) and X (explanatory/independent/predictor/regressor/exogeneous)
variables can be explained by multiple X variables</li>
</ul>

<h2 id="multiple-linear-regression-in-python"><span style="color:#33a8ff">Multiple Linear Regression in Python</span></h2>
<ul>
  <li>We will use <code class="language-plaintext highlighter-rouge">bioinfokit v0.7.2</code> or later for performing MLR.</li>
  <li>Check <a href="http://localhost:4000/blog/howtoinstall.html">How to install bioinfokit</a> for latest version.</li>
  <li>Download <a href="http://localhost:4000/assets/posts/reg/test_reg.csv">dataset</a></li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># you can use interactive python interpreter, jupyter notebook, google colab, spyder or python code
# I am using interactive python interpreter (Python 3.8.2)
</span><span class="o">&gt;&gt;&gt;</span> <span class="kn">from</span> <span class="nn">bioinfokit.analys</span> <span class="kn">import</span> <span class="n">stat</span><span class="p">,</span> <span class="n">get_data</span>
<span class="c1"># load dataset as pandas dataframe. it should not have missing values.
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df</span> <span class="o">=</span> <span class="n">get_data</span><span class="p">(</span><span class="s">'mlr'</span><span class="p">).</span><span class="n">data</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">df</span><span class="p">.</span><span class="n">head</span><span class="p">()</span>
   <span class="n">X1</span>   <span class="n">X2</span>    <span class="n">Y</span>
<span class="mi">0</span>  <span class="mi">25</span>  <span class="mi">355</span>  <span class="mi">670</span>
<span class="mi">1</span>  <span class="mi">30</span>  <span class="mi">398</span>  <span class="mi">690</span>
<span class="mi">2</span>  <span class="mi">18</span>  <span class="mi">328</span>  <span class="mi">635</span>
<span class="mi">3</span>  <span class="mi">15</span>  <span class="mi">320</span>  <span class="mi">625</span>
<span class="mi">4</span>  <span class="mi">20</span>  <span class="mi">335</span>  <span class="mi">640</span>

<span class="o">&gt;&gt;&gt;</span> <span class="n">reg</span> <span class="o">=</span> <span class="n">stat</span><span class="p">()</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">reg</span><span class="p">.</span><span class="n">lin_reg</span><span class="p">(</span><span class="n">df</span><span class="o">=</span><span class="n">df</span><span class="p">,</span> <span class="n">x</span><span class="o">=</span><span class="p">[</span><span class="s">'X1'</span><span class="p">,</span> <span class="s">'X2'</span><span class="p">],</span> <span class="n">y</span><span class="o">=</span><span class="p">[</span><span class="s">'Y'</span><span class="p">])</span>

<span class="n">Regression</span> <span class="n">equation</span><span class="p">:</span>

<span class="mf">521.4505</span> <span class="o">+</span> <span class="p">(</span><span class="mf">3.258</span><span class="o">*</span><span class="n">X1</span><span class="p">)</span> <span class="o">+</span> <span class="p">(</span><span class="mf">0.1651</span><span class="o">*</span><span class="n">X2</span><span class="p">)</span>

<span class="n">Regression</span> <span class="n">Summary</span><span class="p">:</span>


<span class="o">----------------------------------------</span>  <span class="o">------------</span>
<span class="n">Dependent</span> <span class="n">variables</span>                       <span class="p">[</span><span class="s">'X1'</span><span class="p">,</span> <span class="s">'X2'</span><span class="p">]</span>
<span class="n">Independent</span> <span class="n">variables</span>                     <span class="p">[</span><span class="s">'Y'</span><span class="p">]</span>
<span class="n">Coefficient</span> <span class="n">of</span> <span class="n">determination</span> <span class="p">(</span><span class="n">r</span><span class="o">-</span><span class="n">squared</span><span class="p">)</span>  <span class="mf">0.9425</span>
<span class="n">Adjusted</span> <span class="n">r</span><span class="o">-</span><span class="n">squared</span>                        <span class="mf">0.9368</span>
<span class="n">Root</span> <span class="n">Mean</span> <span class="n">Square</span> <span class="n">Error</span> <span class="p">(</span><span class="n">RMSE</span><span class="p">)</span>             <span class="mf">5.5869</span>
<span class="n">Mean</span> <span class="n">of</span> <span class="n">Y</span>                                 <span class="mf">639.3913</span>
<span class="n">Residual</span> <span class="n">standard</span> <span class="n">error</span>                   <span class="mf">5.989</span>
<span class="n">No</span><span class="p">.</span> <span class="n">of</span> <span class="n">Observations</span>                       <span class="mi">23</span>

<span class="n">Regression</span> <span class="n">Coefficients</span><span class="p">:</span>

<span class="n">Parameter</span>      <span class="n">Estimate</span>    <span class="n">Std</span> <span class="n">Error</span>    <span class="n">t</span><span class="o">-</span><span class="n">value</span>    <span class="n">P</span><span class="o">-</span><span class="n">value</span> <span class="n">Pr</span><span class="p">(</span><span class="o">&gt;|</span><span class="n">t</span><span class="o">|</span><span class="p">)</span>
<span class="o">-----------</span>  <span class="o">----------</span>  <span class="o">-----------</span>  <span class="o">---------</span>  <span class="o">------------------</span>
<span class="n">Intercept</span>    <span class="mf">521.45</span>          <span class="mf">16.825</span>    <span class="mf">30.9926</span>           <span class="mf">2.2167e-18</span>
<span class="n">X1</span>             <span class="mf">3.25799</span>        <span class="mf">0.2694</span>   <span class="mf">12.0935</span>           <span class="mf">1.1852e-10</span>
<span class="n">X2</span>             <span class="mf">0.165104</span>       <span class="mf">0.0565</span>    <span class="mf">2.92219</span>          <span class="mf">0.0084258</span>


<span class="n">ANOVA</span> <span class="n">Summary</span><span class="p">:</span>

<span class="n">Source</span>      <span class="n">Df</span>    <span class="n">Sum</span> <span class="n">Squares</span>  <span class="n">Mean</span> <span class="n">Squares</span>    <span class="n">F</span>         <span class="n">Pr</span><span class="p">(</span><span class="o">&gt;</span><span class="n">F</span><span class="p">)</span>
<span class="o">--------</span>  <span class="o">----</span>  <span class="o">-------------</span>  <span class="o">--------------</span>  <span class="o">--------</span>  <span class="o">----------</span>
<span class="n">Model</span>        <span class="mi">2</span>      <span class="mf">11768.1</span>    <span class="mf">5884.0544</span>       <span class="mf">164.0453</span>  <span class="mf">3.9208E-13</span>
<span class="n">Error</span>       <span class="mi">20</span>        <span class="mf">717.369</span>  <span class="mf">35.8685</span>
<span class="n">Total</span>       <span class="mi">22</span>      <span class="mf">12485.5</span>


<span class="n">Variance</span> <span class="n">inflation</span> <span class="n">factor</span> <span class="p">(</span><span class="n">VIF</span><span class="p">)</span>

<span class="n">Variable</span>        <span class="n">VIF</span>
<span class="o">----------</span>  <span class="o">-------</span>
<span class="n">X1</span>          <span class="mf">1.64824</span>
<span class="n">X2</span>          <span class="mf">1.64824</span>

</code></pre></div></div>

<h3 id="interpretation">Interpretation</h3>
<ul>
  <li>The regression line with equation [Y = 521.4505 + (3.258<em>X1) + (0.1651</em>X2)], is helpful to predict the value of the Y variable
from the given value of the X variables (X1 and X2). In general, a regression can be useful in predicting the Y of any value
within the range of X. It can be also used to predict Y from X outside the given range, but such extrapolation may
not be useful</li>
  <li>The slope (3.25799 and 0.165104) represents the change in the Y per unit change in the X variable when other X variables remain constant.
It means that the value Y increases by 3.25799 with each unit increase in X1 when X2 is constant. Similarly, value Y
increases by 0.165104 with each unit increase in X2 when X1 is constant. The regression coefficients should be interpreted
confidently only if they are statistically  significant (P&lt;0.05)</li>
  <li>The intercept (521.45) represents the value of Y when all X variables have a value of 0 (X1=0 and X2=0). Here need to be cautious to
interpret intercept as sometimes the value (X1=0) does not make any sense (e.g. speed of car or height of the person). In such cases, the
values within the range of X should be considered to interpret the intercept</li>
  <li>The coefficient of determination (r-squared) is 0.918 (91.8%), which suggests that 91.8% of the variance in Y can be
explained by X variables (X1 and X2). In MLR, adjusted r-squared is more appropriate than r-squared as an increasing number of
X variables also increases r-squared</li>
  <li>From Regression Coefficients, the P-value obtained for X1 and X2 is significant (&lt;0.05), it suggests
that X1 and X2 significantly influence the response variable Y (there is a significant relationship between X and Y)</li>
  <li>From ANOVA, the P-value is significant (&lt;0.05), which suggests that there is a significant relationship between X and Y.
The X variables can reliably predict the Y variable</li>
  <li>In MLR, multicollinearity (the relationship between the X variables) is often a problem. It causes inflation of variance,
changes in the signs and confidence intervals of regression coefficients (Ryan, 2008). Therefore, it is necessary to detect and eliminate
multicollinearity. Multicollinearity can be detected using Variance inflation factor (VIF)
    <ul>
      <li>Generally, VIF &gt; 5 or &gt; 10 suggests the multicollinearity (Vatcheva et al., 2016). But this is not a universal agreement and VIF &lt; 5 could also suggest
the multicollinearity (Vatcheva et al., 2016)</li>
      <li>If VIF &lt; 2 is a good indicator of the absence of strong multicollinearity and VIF = 1 indicates completely absence of multicollinearity</li>
      <li>Sometimes, a correlation coefficient &gt; 0.5 among the X variables can be used to detect the multicollinearity (Vatcheva et al., 2016)</li>
      <li>To remove the multicollinearity you can either take more measurements or remove the variables causing multicollinearity or
perform the ridge regression (Ryan, 2008)</li>
    </ul>
  </li>
  <li>In MLR result, the VIF for both of the X variables (X1=1.64824 and X2=1.64824) are &lt; 2 and suggests there is no strong relationship between the
X variables</li>
</ul>

<h3 id="check-multiple-linear-regression-mlr-assumptions">Check Multiple Linear Regression (MLR) Assumptions</h3>

<p><u>Residuals vs fitted (y_hat) plot</u>: This plot used to check for linearity, variances and outliers in
the regression data</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># get residuals and standardized residuals and add to original dataframe
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df</span><span class="p">[</span><span class="s">'yhat'</span><span class="p">]</span><span class="o">=</span><span class="n">reg</span><span class="p">.</span><span class="n">y_hat</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">df</span><span class="p">[</span><span class="s">'res'</span><span class="p">]</span><span class="o">=</span><span class="n">reg</span><span class="p">.</span><span class="n">residuals</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">df</span><span class="p">[</span><span class="s">'std_res'</span><span class="p">]</span><span class="o">=</span><span class="n">reg</span><span class="p">.</span><span class="n">std_residuals</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">df</span><span class="p">.</span><span class="n">head</span><span class="p">()</span>
   <span class="n">X1</span>   <span class="n">X2</span>    <span class="n">Y</span>        <span class="n">yhat</span>       <span class="n">res</span>   <span class="n">std_res</span>
<span class="mi">0</span>  <span class="mi">25</span>  <span class="mi">390</span>  <span class="mi">670</span>  <span class="mf">667.290604</span>  <span class="mf">2.709396</span>  <span class="mf">0.451566</span>
<span class="mi">1</span>  <span class="mi">30</span>  <span class="mi">398</span>  <span class="mi">690</span>  <span class="mf">684.901388</span>  <span class="mf">5.098612</span>  <span class="mf">0.849769</span>
<span class="mi">2</span>  <span class="mi">18</span>  <span class="mi">328</span>  <span class="mi">635</span>  <span class="mf">634.248248</span>  <span class="mf">0.751752</span>  <span class="mf">0.125292</span>
<span class="mi">3</span>  <span class="mi">15</span>  <span class="mi">320</span>  <span class="mi">625</span>  <span class="mf">623.153447</span>  <span class="mf">1.846553</span>  <span class="mf">0.307759</span>
<span class="mi">4</span>  <span class="mi">20</span>  <span class="mi">335</span>  <span class="mi">640</span>  <span class="mf">641.919955</span> <span class="o">-</span><span class="mf">1.919955</span> <span class="o">-</span><span class="mf">0.319993</span>

<span class="c1"># create fitted (y_hat) vs residuals plot
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">visuz</span><span class="p">.</span><span class="n">stat</span><span class="p">.</span><span class="n">reg_resid_plot</span><span class="p">(</span><span class="n">df</span><span class="o">=</span><span class="n">df</span><span class="p">,</span> <span class="n">yhat</span><span class="o">=</span><span class="s">'yhat'</span><span class="p">,</span> <span class="n">resid</span><span class="o">=</span><span class="s">'res'</span><span class="p">,</span> <span class="n">stdresid</span><span class="o">=</span><span class="s">'std_res'</span><span class="p">)</span>
<span class="c1"># plot will be saved in same dir (resid_plot.png and std_resid_plot.png)
# set parameter show=True, if you want view the image instead of saving
</span></code></pre></div></div>
<p align="center">
<img src="/assets/posts/reg/mlr/resid_plot.png" width="500" />
<img src="/assets/posts/reg/mlr/std_resid_plot.png" width="500" />
</p>

<p>From the plot,</p>
<ul>
  <li>As the data is pretty equally distributed around the line=0 in the residual plot, it meets the assumption of residual
equal variances. The outliers could be detected here if the data lies far away from the line=0.</li>
  <li>In the standardized residual plot, the residuals are within -2 and +2 range and suggest that it meets assumptions of
linearity</li>
</ul>

<p><u>Quantile-quantile (QQ) plot</u>: This plot used to check the data normality assumption</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">statsmodels.api</span> <span class="k">as</span> <span class="n">sm</span>
<span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="c1"># check dataframe for required variables (we will need std_res variable for QQ plot)
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">df</span><span class="p">.</span><span class="n">head</span><span class="p">()</span>
   <span class="n">X1</span>   <span class="n">X2</span>    <span class="n">Y</span>        <span class="n">yhat</span>       <span class="n">res</span>   <span class="n">std_res</span>
<span class="mi">0</span>  <span class="mi">25</span>  <span class="mi">390</span>  <span class="mi">670</span>  <span class="mf">667.290604</span>  <span class="mf">2.709396</span>  <span class="mf">0.451566</span>
<span class="mi">1</span>  <span class="mi">30</span>  <span class="mi">398</span>  <span class="mi">690</span>  <span class="mf">684.901388</span>  <span class="mf">5.098612</span>  <span class="mf">0.849769</span>
<span class="mi">2</span>  <span class="mi">18</span>  <span class="mi">328</span>  <span class="mi">635</span>  <span class="mf">634.248248</span>  <span class="mf">0.751752</span>  <span class="mf">0.125292</span>
<span class="mi">3</span>  <span class="mi">15</span>  <span class="mi">320</span>  <span class="mi">625</span>  <span class="mf">623.153447</span>  <span class="mf">1.846553</span>  <span class="mf">0.307759</span>
<span class="mi">4</span>  <span class="mi">20</span>  <span class="mi">335</span>  <span class="mi">640</span>  <span class="mf">641.919955</span> <span class="o">-</span><span class="mf">1.919955</span> <span class="o">-</span><span class="mf">0.319993</span>

<span class="c1"># create QQ plot
# line=45 option to plot the data around 45 degree line
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">sm</span><span class="p">.</span><span class="n">qqplot</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">'std_res'</span><span class="p">],</span> <span class="n">line</span><span class="o">=</span><span class="s">'45'</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">plt</span><span class="p">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s">"Theoretical Quantiles"</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">plt</span><span class="p">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s">"Standardized Residuals"</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>

</code></pre></div></div>
<p align="center">
<img src="/assets/posts/reg/mlr/qq.svg" width="600" />
</p>

<p>From the plot,</p>
<ul>
  <li>As the standardized residuals lie around the 45-degree line, it suggests that the residuals are normally distributed</li>
</ul>

<h2 id="multiple-linear-regression-with-pytorch">Multiple linear regression with PyTorch</h2>

<p>Letâ€™s perform a MLR with PyTorch with the same dataset</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="kn">from</span> <span class="nn">bioinfokit.analys</span> <span class="kn">import</span> <span class="n">stat</span><span class="p">,</span> <span class="n">get_data</span>
<span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">torch</span> <span class="k">as</span> <span class="n">th</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">df</span> <span class="o">=</span> <span class="n">get_data</span><span class="p">(</span><span class="s">'mlr'</span><span class="p">).</span><span class="n">data</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">df</span><span class="p">.</span><span class="n">head</span><span class="p">()</span>
   <span class="n">X1</span>   <span class="n">X2</span>    <span class="n">Y</span>
<span class="mi">0</span>  <span class="mi">25</span>  <span class="mi">390</span>  <span class="mi">670</span>
<span class="mi">1</span>  <span class="mi">30</span>  <span class="mi">398</span>  <span class="mi">690</span>
<span class="mi">2</span>  <span class="mi">18</span>  <span class="mi">328</span>  <span class="mi">635</span>
<span class="mi">3</span>  <span class="mi">15</span>  <span class="mi">320</span>  <span class="mi">625</span>
<span class="mi">4</span>  <span class="mi">20</span>  <span class="mi">335</span>  <span class="mi">640</span>

<span class="c1"># convert to PyTorch tensor 
# variable shape should be (samples, features)
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">X</span> <span class="o">=</span> <span class="n">th</span><span class="p">.</span><span class="n">tensor</span><span class="p">(</span><span class="n">df</span><span class="p">[[</span><span class="s">'X1'</span><span class="p">,</span> <span class="s">'X2'</span><span class="p">]].</span><span class="n">values</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="n">th</span><span class="p">.</span><span class="n">float32</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">Y</span> <span class="o">=</span> <span class="n">th</span><span class="p">.</span><span class="n">tensor</span><span class="p">(</span><span class="n">df</span><span class="p">[[</span><span class="s">'Y'</span><span class="p">]].</span><span class="n">values</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="n">th</span><span class="p">.</span><span class="n">float32</span><span class="p">)</span>

<span class="c1"># MLR model using PyTorch
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">in_features</span> <span class="o">=</span> <span class="mi">2</span> <span class="c1"># number of independent variable
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">out_features</span> <span class="o">=</span> <span class="mi">1</span> <span class="c1"># dim of predicted variable
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">mlr_model</span> <span class="o">=</span> <span class="n">th</span><span class="p">.</span><span class="n">nn</span><span class="p">.</span><span class="n">Linear</span><span class="p">(</span><span class="n">in_features</span><span class="p">,</span> <span class="n">out_features</span><span class="p">)</span>

<span class="c1"># define loss function (regression error)
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">mse_loss</span> <span class="o">=</span> <span class="n">th</span><span class="p">.</span><span class="n">nn</span><span class="p">.</span><span class="n">MSELoss</span><span class="p">()</span>
<span class="c1"># optimize to minimize the loss function and find optimal LR parameters (Regression Coefficients)
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">optimizer</span> <span class="o">=</span> <span class="n">th</span><span class="p">.</span><span class="n">optim</span><span class="p">.</span><span class="n">Adam</span><span class="p">(</span><span class="n">mlr_model</span><span class="p">.</span><span class="n">parameters</span><span class="p">(),</span> <span class="n">lr</span><span class="o">=</span><span class="mf">0.1</span><span class="p">)</span> 
<span class="c1"># set number of iterations until you see the convergence in the loss function
# when you see similar minimum values for a large number of ending iterations
# it will give you the best values of LR parameters
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">n_iter</span> <span class="o">=</span> <span class="mi">25000</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n_iter</span><span class="p">):</span>
        <span class="c1"># predict model with current MLR parameters
</span>        <span class="n">y_pred</span> <span class="o">=</span> <span class="n">mlr_model</span><span class="p">(</span><span class="n">X</span><span class="p">)</span>
        <span class="c1"># calculate loss function
</span>        <span class="n">step_loss</span> <span class="o">=</span> <span class="n">mse_loss</span><span class="p">(</span><span class="n">y_pred</span><span class="p">,</span> <span class="n">Y</span><span class="p">)</span>
        
        <span class="c1"># Backward to find the derivatives of the loss function with respect to LR parameters
</span>        <span class="c1"># make any stored gradients to zero
</span>        <span class="n">optimizer</span><span class="p">.</span><span class="n">zero_grad</span><span class="p">()</span>
        <span class="n">step_loss</span><span class="p">.</span><span class="n">backward</span><span class="p">()</span>
        <span class="c1"># update with current step LR parameters 
</span>        <span class="n">optimizer</span><span class="p">.</span><span class="n">step</span><span class="p">()</span>
        
        <span class="k">print</span> <span class="p">(</span><span class="s">'i [{}], Loss: {:.2f}, Bias {:.2f}'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">step_loss</span><span class="p">.</span><span class="n">item</span><span class="p">(),</span> <span class="n">mlr_model</span><span class="p">.</span><span class="n">bias</span><span class="p">.</span><span class="n">item</span><span class="p">()))</span>

<span class="c1"># see the last few iterations
</span><span class="n">i</span> <span class="p">[</span><span class="mi">24986</span><span class="p">],</span> <span class="n">Loss</span><span class="p">:</span> <span class="mf">31.36</span><span class="p">,</span> <span class="n">Bias</span> <span class="mf">521.42</span>
<span class="n">i</span> <span class="p">[</span><span class="mi">24987</span><span class="p">],</span> <span class="n">Loss</span><span class="p">:</span> <span class="mf">31.26</span><span class="p">,</span> <span class="n">Bias</span> <span class="mf">521.42</span>
<span class="n">i</span> <span class="p">[</span><span class="mi">24988</span><span class="p">],</span> <span class="n">Loss</span><span class="p">:</span> <span class="mf">31.19</span><span class="p">,</span> <span class="n">Bias</span> <span class="mf">521.42</span>
<span class="n">i</span> <span class="p">[</span><span class="mi">24989</span><span class="p">],</span> <span class="n">Loss</span><span class="p">:</span> <span class="mf">31.22</span><span class="p">,</span> <span class="n">Bias</span> <span class="mf">521.42</span>
<span class="n">i</span> <span class="p">[</span><span class="mi">24990</span><span class="p">],</span> <span class="n">Loss</span><span class="p">:</span> <span class="mf">31.28</span><span class="p">,</span> <span class="n">Bias</span> <span class="mf">521.42</span>
<span class="n">i</span> <span class="p">[</span><span class="mi">24991</span><span class="p">],</span> <span class="n">Loss</span><span class="p">:</span> <span class="mf">31.30</span><span class="p">,</span> <span class="n">Bias</span> <span class="mf">521.42</span>
<span class="n">i</span> <span class="p">[</span><span class="mi">24992</span><span class="p">],</span> <span class="n">Loss</span><span class="p">:</span> <span class="mf">31.26</span><span class="p">,</span> <span class="n">Bias</span> <span class="mf">521.42</span>
<span class="n">i</span> <span class="p">[</span><span class="mi">24993</span><span class="p">],</span> <span class="n">Loss</span><span class="p">:</span> <span class="mf">31.20</span><span class="p">,</span> <span class="n">Bias</span> <span class="mf">521.42</span>
<span class="n">i</span> <span class="p">[</span><span class="mi">24994</span><span class="p">],</span> <span class="n">Loss</span><span class="p">:</span> <span class="mf">31.19</span><span class="p">,</span> <span class="n">Bias</span> <span class="mf">521.42</span>
<span class="n">i</span> <span class="p">[</span><span class="mi">24995</span><span class="p">],</span> <span class="n">Loss</span><span class="p">:</span> <span class="mf">31.23</span><span class="p">,</span> <span class="n">Bias</span> <span class="mf">521.42</span>
<span class="n">i</span> <span class="p">[</span><span class="mi">24996</span><span class="p">],</span> <span class="n">Loss</span><span class="p">:</span> <span class="mf">31.25</span><span class="p">,</span> <span class="n">Bias</span> <span class="mf">521.42</span>
<span class="n">i</span> <span class="p">[</span><span class="mi">24997</span><span class="p">],</span> <span class="n">Loss</span><span class="p">:</span> <span class="mf">31.24</span><span class="p">,</span> <span class="n">Bias</span> <span class="mf">521.42</span>
<span class="n">i</span> <span class="p">[</span><span class="mi">24998</span><span class="p">],</span> <span class="n">Loss</span><span class="p">:</span> <span class="mf">31.21</span><span class="p">,</span> <span class="n">Bias</span> <span class="mf">521.42</span>
<span class="n">i</span> <span class="p">[</span><span class="mi">24999</span><span class="p">],</span> <span class="n">Loss</span><span class="p">:</span> <span class="mf">31.19</span><span class="p">,</span> <span class="n">Bias</span> <span class="mf">521.42</span>

<span class="c1"># bias parameter converged  here to 521.42 for last few iterations
# also loss is also converged  
</span></code></pre></div></div>

<p>Now, get the best MLR parameters from this trained model,</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># intercept (a)
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">mlr_model</span><span class="p">.</span><span class="n">bias</span><span class="p">.</span><span class="n">item</span><span class="p">()</span>
<span class="mf">521.4164428710938</span>
<span class="c1"># slope (b)
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">mlr_model</span><span class="p">.</span><span class="n">weight</span><span class="p">.</span><span class="n">detach</span><span class="p">()</span>
<span class="n">tensor</span><span class="p">([[</span><span class="mf">3.2580</span><span class="p">,</span> <span class="mf">0.1655</span><span class="p">]])</span>
</code></pre></div></div>

<p>Now, letâ€™s predict the Y from some random X1 and X2,</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">X1_data</span><span class="p">,</span> <span class="n">X2_data</span> <span class="o">=</span> <span class="mi">28</span><span class="p">,</span> <span class="mi">396</span>
<span class="c1"># predict Y value when X1 is 28 and X2 is 396
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">y_pred</span> <span class="o">=</span> <span class="n">mlr_model</span><span class="p">(</span><span class="n">th</span><span class="p">.</span><span class="n">tensor</span><span class="p">([[</span><span class="n">X1_data</span><span class="p">,</span> <span class="n">X2_data</span><span class="p">]],</span> <span class="n">dtype</span><span class="o">=</span><span class="n">th</span><span class="p">.</span><span class="n">float32</span><span class="p">)).</span><span class="n">detach</span><span class="p">()</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">y_pred</span><span class="p">.</span><span class="n">item</span><span class="p">()</span>
<span class="mf">678.1707763671875</span>
<span class="c1"># Y=678.17 when X1 is 28 and X2 is 396
</span></code></pre></div></div>

<h3 id="references">References</h3>
<ul>
  <li>Vatcheva KP, Lee M, McCormick JB, Rahbar MH. Multicollinearity in regression analyses conducted in epidemiologic studies.<br />
Epidemiology (Sunnyvale, Calif.). 2016 Apr;6(2).</li>
  <li>Ryan TP. Modern regression methods. John Wiley &amp; Sons; 2008 Nov 10.</li>
</ul>

<p>
<strong style="color:#33a8ff">How to cite?</strong>
<br />
Renesh Bedre.(2020, July 29). reneshbedre/bioinfokit: Bioinformatics data analysis and visualization toolkit (Version v0.9). Zenodo.
<a href="http://doi.org/10.5281/zenodo.3965241" target="_blank">http://doi.org/10.5281/zenodo.3965241</a>
<br /><br />
<span style="color:#9e9696">If you have any questions, comments or recommendations, please email me at
<b>reneshbe@gmail.com</b></span>





<!-- Begin Mailchimp Signup Form -->

<!--
<link href="//cdn-images.mailchimp.com/embedcode/horizontal-slim-10_7.css" rel="stylesheet" type="text/css">
<style type="text/css">
	#mc_embed_signup{background:#fff; clear:left; font:14px Helvetica,Arial,sans-serif; width:100%;}
	/* Add your own Mailchimp form style overrides in your site stylesheet or in this style block.
	   We recommend moving this block and the preceding CSS link to the HEAD of your HTML file. */
</style>
<div id="mc_embed_signup">
<form action="https://github.us10.list-manage.com/subscribe/post?u=1c0202ed60d33515742eec50a&amp;id=b17e2351b6" method="post" id="mc-embedded-subscribe-form" name="mc-embedded-subscribe-form" class="validate" target="_blank" novalidate>
    <div id="mc_embed_signup_scroll">
	<label for="mce-EMAIL">Subscribe for new articles</label>
	<input type="email" value="" name="EMAIL" class="email" id="mce-EMAIL" placeholder="email address" required>
-->

    <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
<!--
<div style="position: absolute; left: -5000px;" aria-hidden="true"><input type="text" name="b_1c0202ed60d33515742eec50a_b17e2351b6" tabindex="-1" value=""></div>
    <div class="clear"><input type="submit" value="Subscribe" name="subscribe" id="mc-embedded-subscribe" class="button"></div>
    </div>
</form>
</div>
-->

<!--End mc_embed_signup-->
</p>

<p>
<!--

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css">

<style>
    .share-box a {
  display: inline-block;
  -webkit-box-shadow: 0 0 1px #777;
  box-shadow: 0 0 1px #777;
  padding: 5px 12px;
  margin-right: 5px;
  margin-bottom: 5px;
  text-decoration: none; }
  .share-box a:hover {
    text-decoration: none;
    -webkit-transition: background-color 200ms linear;
    -ms-transition: background-color 200ms linear;
    transition: background-color 200ms linear; }

.f {
  color: #3b5998; }
  .f:hover {
    color: #fff;
    background-color: #3b5998; }

.t {
  color: #4099FF; }
  .t:hover {
    color: #fff;
    background-color: #4099FF; }

.g {
  color: #d34836; }
  .g:hover {
    color: #fff;
    background-color: #d34836; }

.r {
  color: #ff5700; }
  .r:hover {
    color: #fff;
    background-color: #ff5700; }

.l {
  color: #0077b5; }
  .l:hover {
    color: #fff;
    background-color: #0077b5; }

.e {
  color: #444444; }
  .e:hover {
    color: #fff;
    background-color: #444444; }
</style>

<div class="share-box">
<a class="f" href="https://www.facebook.com/sharer/sharer.php?u=http://localhost:4000/blog/mlr.html" onclick="window.open(this.href, 'mywin',
'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;" ><i class="fab fa-facebook-f"></i></a>

<a class="t" href="https://twitter.com/intent/tweet?text=&url=http://localhost:4000/blog/mlr.html" onclick="window.open(this.href, 'mywin',
'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;"><i class="fab fa-twitter"></i></a>

  <a class="g" href="https://plus.google.com/share?url=http://localhost:4000/blog/mlr.html" onclick="window.open(this.href, 'mywin',
'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;" ><i class="fab fa-google-plus-square"></i></a>


<a class="r" href="http://www.reddit.com/submit?url=http://localhost:4000/blog/mlr.html" onclick="window.open(this.href, 'mywin',
'left=20,top=20,width=900,height=500,toolbar=1,resizable=0'); return false;" ><i class="fab fa-reddit"></i></a>

<a class="l" href="https://www.linkedin.com/shareArticle?mini=true&url=http://localhost:4000/blog/mlr.html" onclick="window.open(this.href, 'mywin',
'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;" ><i class="fab fa-linkedin-in"></i></a>

<a class="e" href="mailto:?subject=&amp;body=Check out this site http://localhost:4000/blog/mlr.html"><i class="fas fa-envelope-square"></i></a>
-->

  <!--
    <a href="https://twitter.com/renbedre?ref_src=twsrc%5Etfw" class="twitter-follow-button" data-show-count="false">Follow @renbedre</a><script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
-->

<!--
</div>

-->

</p>

<p><span style="color:#9e9696"><i> Last updated: July 18, 2020</i> </span></p>

<p>
<a rel="license" href="http://creativecommons.org/licenses/by/4.0/" target="_blank"><img alt="Creative Commons License" style="border-width:0" src="https://i.creativecommons.org/l/by/4.0/88x31.png" /></a><br />This work is licensed under a <a rel="license" href="http://creativecommons.org/licenses/by/4.0/" target="_blank">Creative Commons Attribution 4.0 International License</a>.
</p>
:ET